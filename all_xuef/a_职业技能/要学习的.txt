


全栈工程师的成长途径

作品集的积累。程序员和设计师的作品集往往是自己的在线个人网站。对于程序员来说，成本最低的一种作品展示方式就是把自己的代码发布到GitHub上。

初级前端知识体系

对浏览器兼容性的了解
对HTML/CSS/Javascript语法和原理的理解
对编辑器和插件的熟悉程度
对调试工具的了解程度
对版本管理软件的熟悉和应用经验
对前端库/框架的使用
标准/规范
中级前端知识体系
对代码质量、代码规范的理解
对Javascript单元测试的熟悉
对性能优化的应用和理解
对SEO的应用和理解
代码部署
移动Web
高级前端知识体系
代码架构
安全
对自动化测试的理解
虽然VPS对于个人开发者来说比较昂贵，但我还是推荐全栈工程师买一台VPS，自己玩一玩。理由如下：

对于网站的全貌有所了解
服务器稳定
可以部署自己的环境
可以学习Linux
帮助理解HTTP
VPS选择

内存一般是主要瓶颈，建议选择最少512MB
CPU是相对没那么重要的性能指标
硬盘的大小和读写速度是关键
服务商的客户服务
自己搭建网站是个很费时费力的事，途中会碰到很多问题，确实可以学到很多东西，适合有精力有兴趣的同学。

全栈工程师扩展技能

设计模式

创建型模式。用来创建对象的模式，它对实例化的过程进行了抽象。如单例模式
结构型模式。主要解决类、对象、模块之间的耦合关系。如适配器模式
行为型模式。用来识别对象之间的常用脚力模式并加以实现。如观察者模式
设计原则

Don’t Repeat Yourself
惯例优于设置。开发人员仅需规定应用中不符约定的部分。
Keep it simple，stupid
最少知道原则。减少耦合。
推荐一本书《大话设计模式》

提高工作效率方式

阅读英文资料。英文的技术资料更多。Google的搜索能力非常强。英语世界的语言风格比较严谨
时间管理四象限。如果您平时没有做重要的事情，就会发现自己常常在做紧急的事情。
消除重复工作。使用工具来无缝衔接已有流程
给自己留出不被打扰的时间
番茄工作法
跨界思考
纸上头脑风暴
使用版本控制工具和构建系统
拿工作时长来拼，这还是体力劳动时代打工者的心态在作祟。

架构模式

MVC模式（Model-View-Controller）是最有名的一种架构模式。
前端有一种MVVM的模式，熟悉Angular的人都知道~

学习设计

设计的四大基本理论：

亲密。关系亲密的元素要放在一起，关系疏远的元素则要分开。位置的亲密性直接表现出意义的相关性。
对其。
重复。视觉上使用重复的图形和元素、线条、颜色等。
对比。如果两个元素不一样，就让它完全不一样，产生视觉冲击力。
设计工具

Axure
Sketch
Quartz Composer

# 学习管理

在项目最开始做出合理的时间评估
根据人员的强项来安排任务
唤起团队对项目成功的渴望
保障沟通。理想沟通频率每周至少两次。


