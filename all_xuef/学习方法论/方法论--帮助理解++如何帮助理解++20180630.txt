
1. 《algs--java》中有很多这类原则
1) 图解
2) 交代一些产生背景， 发展历程， 应用情况
3) 从一个事物从无到有的过程， 比如2-3树， 红黑树的生成
4) 考察其历史，才能理解概念

2. TEDx 数学
换个角度
运用类比

3. 费曼
你要先真正理解--能够清晰简洁的解释概念以至于小孩子都能懂


4. 《MIT--线性代数》以空间的概念来审视线性代数

5. Norvig--人工智能编程范式
1) 错误， 寻找答案的艰辛过程是非常有教益的
2) 简单版本-->复杂版本

6. 刘未鹏--算法为什么这么难
想要做到这两点就必须尽量从知识树的“根节点”入手，虽然这是一个美梦，例如数学界寻找“根节点”的美梦
由来已久（《跟波利亚学解题》的“一点历史”小节），但哥德尔一个证明就让美梦成了泡影（《永恒的金色对角线》））;
但是，这并不阻止我们去寻找更高层的节点——更具普适性的解题原则和方法。所以，理想的算法书或者算法讲解应该是从
最具一般性的思维法则开始，顺理成章地推导出算法，这个过程应该尽量还原一个”普通人“思考的过程，而不是让人看了
之后觉得”这怎么可能想到呢？









