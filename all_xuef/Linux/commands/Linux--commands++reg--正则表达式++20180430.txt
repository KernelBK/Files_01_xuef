
正则表达式是模式匹配技术的核心。
借助此，可以生成我们所需的各类输出结果，例如过滤、剥离(strip)、替换、搜索。

# 匹配电子邮件的reg
[a-z0-9_]+@[a-z0-9]+\.[a-z]+

# 匹配给定文本中所有单词
( ?[a-zA-Z]+ ?)

# 匹配ip
[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}
192.168.0.2


## reg 基本组成
^
$
.
[]		[Tt]
[^]
[-]		[a-z]
?		之前项0次或1次
* 		0 或 多次
+		1 或 多次
()		创建一个用于匹配的子串		ma(tri)?x 匹配max 或 matrix
{n}		匹配之前的项 n 次
{n,}	至少n次
{n,m}	[0-9]{1,3}
|		交替——匹配|两边的任意一项	Oct (1st | 2nd) 匹配 Oct 1st 或 Oct 2nd
\		转义












