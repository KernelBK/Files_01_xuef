一定要追求完美!!!

AOP 面向切面编程(Aspect Oriented Programming)
## 切面
表示从业务逻辑中分离出来的横切逻辑，如性能监控、日志记录、权限控制等。
这些功能可从核心的业务逻辑代码中抽离出去。
即，通过AOP可以解决代码耦合问题，使职责更加单一。

## AspectJ(比Spring自带的aop好)
Spring + AspectJ

## 应用场景
1. 统计每个方法的执行时间

2. JDBC 数据库操作
开头: 连接数据库
...操作...
结尾: 关闭数据库连接

## Spring AOP
### 使用
1. 编程式
2. 声明式
