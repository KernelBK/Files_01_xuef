package org.smart4j.framework;

import java.io.IOException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRegistration;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.smart4j.framework.bean.Request;
import org.smart4j.framework.utils.ConfigHelper;

/**
 * 请求转发器
 * @author moveb
 *
 */
@WebServlet(urlPatterns="/*", loadOnStartup=0)
public class DispatcherServlet extends HttpServlet {
	@Override
	public void init(ServletConfig servletConfig) throws ServletException {
		// 初始化相关 Helper 类
		HelperLoader.init();
		// 获取 ServletContext 对象（用于注册 Servlet）
		ServletContext servletContext = servletConfig.getServletContext();
		// 注册处理JSP的Servlet
		ServletRegistration jspServlet = servletContext.getServletRegistration("jsp");
		jspServlet.addMapping(ConfigHelper.getAppAssetPath() + "*");
		
		// 注册处理静态资源的默认 Servlet
		ServletRegistration defaultServlet = servletContext.getServletRegistration("default");
		defaultServlet.addMapping(ConfigHelper.getAppAssetPath() + "*");
	}
	@Override
	protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 获取请求方法与请求路径
		request.getMethod().toLowerCase();
		
		
		
		
		
	}
}
