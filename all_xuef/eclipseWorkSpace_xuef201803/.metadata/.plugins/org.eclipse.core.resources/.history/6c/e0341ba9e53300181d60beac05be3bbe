

当你编写一条update语句，准备提交给数据库时，可能别人提交了一条delete语句到数据库。
也许我们都对同一条记录进行操作。
我们必须保证操作之间是隔离的。

原子性、一致性

## 事务的隔离级别
READ_UNCOMMITTED
READ_COMMITTED
REPEATABLE_READ
SERIALIZABLE
越往下，并发性越差，安全性越高。

ACID

atom 原子性(基础)
consistency 一致性()
isolation 隔离性(是手段)
durability 持久性(是目的)

## 事务隔离
事务隔离级别 是为了解决数据在高并发下产生的问题。
** dirty read 脏读
** unrepeatable read 不可重复读
** phantom read 幻读
还是没搞明白。

### 获取数据库的默认隔离级别(通过元数据)
DatabaseMetaData metaData = con.getMetaData();
metaData.getDefaultTransactionIsolation();

那么数据库又是怎样隔离事务的呢？其实就是“锁”。当插入数据时，就锁定表，这叫“锁表”；
当更新数据时，就锁定行。
???


## Spring的事务传播行为(Transaction Propagation Behavior)

