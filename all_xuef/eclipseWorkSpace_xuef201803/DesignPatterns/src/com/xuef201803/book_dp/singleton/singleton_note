

# 定义
保证一个类仅有一个实例，并提供一个访问它的全局访问点。

# 思路
一个类之所以能够有多个实例，在于它能够生育(构造方法)，如何让它不生育或只生一胎，
方法就是在合适的时机阉割它(将其构造方法声明为private,将创建实例的权限收回)

# 实现(Java 中有两种方式: 懒汉式和饿汉式)
所谓懒汉式，就是延迟初始化。


# 单例模式的范围
在多大范围内是单例呢？
目前Java里面实现的单例是一个虚拟机的范围。因为装载类的功能是虚拟机的，所以一个虚拟机在通过自己的ClassLoader
装载饿汉式实现单例类的时候会创建一个类的实例。

这里讨论的单例模式并不适合集群环境。

# 懒汉式的延迟初始化 && 缓存思想
## java中缓存的基本实现
1. 最常见的一种缓存实现方式就是使用Map
1) 先到缓存中找，看看是否存在需要的数据
2) 如果没有，就创建一个满足需要的数据，然后把它放在缓存中。如果找到了，就直接使用


# 最佳单例
1.
类级内部类
多线程缺省同步锁(某些情况下，JVM隐含为您执行了同步)
2. 单元素枚举


