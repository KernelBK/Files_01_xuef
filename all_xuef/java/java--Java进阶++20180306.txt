程序员Java编程进阶的5个注意点，别编程两三年还是增删改查！

对于一个进军编程界的两三年的Java程序员来说，工作如果还只是增删改查，这可是相当痛苦的。
有这种情况的程序员，有不少是在外包公司，每天就期待下班，简直就是做一天和尚撞一天钟。
为了打破这种僵局，Java程序员在这个迷茫的阶段应做什么呢?
程序员Java编程进阶的5个注意点，别编程两三年还是增删改查！
下面w3cschool将为程序员小伙伴们分享5个进阶的注意点，顺便附上进阶的书单。
0、阅读源代码
阅读源代码首先是选择，无论是你选择spring，还是Java Collection，选择了一个就坚持阅读下去，切忌坐这山观那山。
在阅读源代码过程中，应该搞清楚以下4个问题：
A、源代码是要解决什么问题?
B、源代码是通过什么原理实现?
C、它采用了哪些接口、类?
D、为什么采用这些接口和类?

程序员Java编程进阶的5个注意点，别编程两三年还是增删改查！
1、多参与项目
在参与项目的过程中，你将接触到各种工具Maven/SBT,JUnit等。
以代码为核心，以解决问题为前提，你自然可以提高自己对java编程的认识。
与此同时，通过项目的细节，你也可以查缺补漏，找到自己知识技能薄弱的环节。
2、问题指引你进阶之路
Java入门容易精通难，在学习的过程中，尽量以问题为导向，这可以让你的思考和理解聚焦，而不至于分散。
程序员Java编程进阶的5个注意点，别编程两三年还是增删改查！
3、具体问题具体分析
在编程的过程中，因为每一种架构都有典型的应用场景，所我们要结合实际应用场景去分析和解决问题。
4、编程思想驾驭代码
当你用过很多框架和开源项目并自己写了不少程序之后，你可以边学边用《Effective Java》中的原理，开始研究何时何地如何
运用合适的技术与机制，以便让代码更高效。
程序员Java编程进阶的5个注意点，别编程两三年还是增删改查！
对于一个Java程序员来说，或许只有自己知道，每一个低潮、痛苦、无奈的阶段是怎么熬过来的。
最后，用一句话结尾，You rest, you rust. You rush, you crash。
附Java程序员进阶书单：《Java编程思想》、《深入剖析Tomcat》、《深入理解Java虚拟机》、《JavaScript编程全解》、
《Java程序性能优化》、《高性能MySQL》。




思考：
【要知道自己到究竟要什么】这是自我定位最关键的一点，也是最重要的一步。因为这关系到你能够够选对学习方向，能否沉下心来去学习。
我们都知道，去做自己感兴趣的事情时，事半而功倍，因为你愿意为此投入精力，而不是出于某种原因不得不去做。
经常会有人在后台提问，现在Java好找工作嘛？Python到底好不好学？我要不要学习大数据呢？这些问题的答案其实大家心里都明白：
只要你足够认真并坚持下去，学什么都能够找到一份好的工作。
对一个搞技术的人来说，年龄的增长其实不是那么可怕，可怕的是你没有匹配自己年龄的技术深度。当你的工作换一个刚毕业的学生都能做的时候，
你很快就会被淘汰了。所以，选方向一定要选自己感兴趣的方向，因为只有这样，你才有兴趣去往深入了学，你才不会在未来被年轻人挤下去。

目标
【确认学习目标】首先，你需要确认你要学什么，切记不要三心二意。学习最好一个时间段专一的去研究一个知识点，不要今天学 python 
明天又想学 java 了。确认一个2-5年的长期目标并以此分解成短期目标。
长期目标例如，30岁成为某一个领域的技术总监年薪50W，短期目标例如，明天一天的一份学习计划
面试时候HR经常会问到：你的职业规划是什么？一个优秀的人，必然会有自己的职业规划，知道自己在什么时期要做什么，因而不断向自己
的目标前进。学习也一样，当你有了一个清晰的目标的时候，才不会迷茫。

【回顾】温故而知新，如果你学的东西，很久都没用，突然有一天你又要捡起它，你会发现，你之前做的努力，简直太值了，你有资料！
有脑图！有流程图！还有笔记！分分钟就记起来了。
反馈
【有效反馈】指的是在一定时间内，针对某一件工作，通过可以反映真实结果 的评估方式，在排除干扰因素的前提下，对下一步有明确指导的反馈
怎么理解呢？
比如：A“我学习了一个月Python，感觉基本掌握了。”这就属于无效反馈，因为没有明确的结果。
B“我学习了一个月Python，并用来写了个12306爬虫，采集车次、时刻表数据，经过不断调试，每天大概可以采集到2000多个车站，5000多个车次，
5万多条时刻信息”这就是有效反馈。
人是驱动型生物，总是在反馈中迭代成长，如果你不断得到积极的正向的有效反馈，自然会进入到一个持续进步，野蛮成长的良性循环中。
