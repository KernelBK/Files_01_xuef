## OO基础


## OO设计原则
### 针对接口编程，不针对实现编程。
### 多用组合，少用继承。

第2章 观察者模式
主题与观察者都使用接口，观察者利用主题的接口向主题注册，而主题利用观察者接口通知观察者。
这样可以让两者之间运行正常，又同时具有松耦合的优点。

第3章 装饰者模式

运行时扩展，远比编译时期的继承威力大。

一旦你熟悉了装饰技巧，你将能够在不修改任何底层代码的情况下，给你的（或别人的）对象赋予新的职责。

当我们将装饰者与组件组合时，就是在加入新的行为。所得到的新行为，并不是继承自超类，而是由组合对象得来的。

继承Beverage抽象类，是为了有正确的类型，而不是继承它的行为。行为来自装饰者和基础组件，或与其他装饰者
之间的组合关系。



