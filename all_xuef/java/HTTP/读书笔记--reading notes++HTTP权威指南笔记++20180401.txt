
# java网络编程
TCP/IP Sockets in Java, Second Edition: Practical Guide for Programmers
Java Network Programming

你应该处于学习socket api阶段吧，其实这个阶段随便找本书看下就下，如果好奇心强烈，推荐看下unix网络编程，
了解下更低层的知识，这块是逃不过的，会用了api才是开始。下步就是学习reactor、proactor模式，当然理解就好，
没必要自己去写，这时就知道为什么要用netty等框架。等框架用的顺手了，慢慢就理解到网络编程重点不在于socket api，
而是线程模型，所以就开始深入研究多线程编程。。。再之后就是分布式。。。

首先了解一下基本的网络协议，其次看一下java的API。前者有大量的业界经典，去网上自己找下。但是都比较厚，
因为网络发展这些年，协议制定者们为了适应不断增长的网络需求已经给最初的模型加入了太多的东西，所以在学
协议的时候一定要看他是什么背景出现的，解决了什么问题，这样摸清协议的发展脉络，学起来就得心应手了。
后者的话，写点小东西锻炼一下就好，比如爬虫啦，用下时下流行的RPC框架。
对了，网络中最需要注意的一个问题就是序列化。因为溯本求源，你的每一个类里面的阈最后还得落地成字节来传送。


5.Concurrency Practice in Java

## 依次web通信的所有细节、完整流程
client-->代理-->server
（缓存，网关，隧道， Agent代理[浏览器，爬虫]）

网络蜘蛛会在web上闲逛，搜集信息以构建有效的web内容档案。（可从世界范围内获取web页面）

### 代理
可作为 转发所有web流量的可信任中间点
如：在企业中对下载的应用程序进行病毒检测
：对小学生屏蔽一些成人内容

## URL编码
恶意对额外字符进行编码，以绕过那些对URL进行模式匹配的应用程序——如web过滤程序。
解释URL的web程序必须在对url处理前对其进行解码。


# 章3 HTTP报文
掌握本章，你就可以编写自己的HTTP应用程序了。


## 状态码
服务器可以利用状态码和首部来指示浏览器的动作。
Location


# 章4 连接管理
???
《TCP详解：协议》《Unix网络编程》卷一卷二


# 第二部分 HTTP结构

## 章5 web服务器















