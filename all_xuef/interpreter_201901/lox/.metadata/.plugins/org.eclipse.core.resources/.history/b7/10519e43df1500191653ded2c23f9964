package com.interp.lox.parse;

import com.interp.lox.parse.Expr.Binary;
import com.interp.lox.parse.Expr.Grouping;
import com.interp.lox.parse.Expr.Literal;
import com.interp.lox.parse.Expr.Unary;

public class AstPrinter implements Expr.Visitor<String> {

	@Override
	public String visitBinaryExpr(Expr.Binary expr) {
		return parenthesize(expr.operator.lexeme, expr.left, expr.right);
	}

	@Override
	public String visitGroupingExpr(Expr.Grouping expr) {
		return parenthesize("group", expr.expression);
	}

	@Override
	public String visitLiteralExpr(Expr.Literal expr) {
		if (expr.value == null)
			return "nil";
		return expr.value.toString();
	}

	@Override
	public String visitUnaryExpr(Expr.Unary expr) {
		return parenthesize(expr.operator.lexeme, expr.right);
	}

}
