
"""
除了代替循环之外，yield from 还会创建通道，把内层生成器
直接与外层生成器的客户端联系起来。把生成器当成协程使用时，这个
通道特别重要，不仅能为客户端代码生成值，还能使用客户端代码提供
的值。
"""
# .send() 方法允许在客户代码和生成器之间双向交换数据。
# 这是一项重要的“改进”，甚至改变了生成器的本性：像这样使用的话，生成器就变身为协程。
"""
1. 生成器用于生成供迭代的数据
2. 协程是数据的消费者
3. 为了避免脑袋炸裂，不能把这两个概念混为一谈
4. 协程与迭代无关
5. 注意，虽然在协程中会使用 yield 产出值，但这与迭代无关
"""
