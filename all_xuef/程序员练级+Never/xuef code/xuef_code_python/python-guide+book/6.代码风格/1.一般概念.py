
"""

"""
# 1. 明确的代码
##在存在各种黑魔法的Python中，我们提倡最明确和直接的编码方式。

#糟糕
def make_complex(*args):
    x, y = args
    return dict(**locals())

#优雅
def make_complex(x, y):
    return {'x': x, 'y': y}

"""
在上述优雅的代码中，x和y以明确的字典形式返回给调用者。开发者在使用 这个函数的时候通过阅读
第一和最后一行，能够正确地知道该做什么。而在 糟糕的例子中则没有那么明确。
"""

# 2. 每行一个声明


# 3. 函数参数
## a) 位置参数 是强制的，且没有默认值。

## b) 关键字参数 是非强制的，且有默认值。它们经常被用在传递给函数的可选参数中。 
## c) 任意参数列表  *args
"""
尽管如此，这种结构有一些缺点，使用时应该予以注意。如果一个函数接受的参数列表具有相同的性质，
通常把它定义成一个参数，这个参数是一个列表或者其他任何序列会更清晰。
"""
## d) 任意关键字参数字典
"""
如果函数要求一系列待定的 命名参数，我们可以使用 **kwargs 的结构。
在函数体中， kwargs 是一个 字典，它包含所有传递给函数但没有被其他关键字参数捕捉的命名参数。
"""























