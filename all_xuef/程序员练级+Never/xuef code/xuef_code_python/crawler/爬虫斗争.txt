

#ANTI
看到验证码被攻破后，和开发者商量了变化下开发模式，数据不再直接渲染，而是由前端异步获取，并且通过JavaScript的加密库
生成动态的token，同时加密库再进行混淆（比较重要的步骤的确有网站这么做，如淘宝和微博的登陆流程）

# Crawler
混淆过的加密库就没有办法了吗？当然不是，可以慢慢调试，找到加密原理，不过小C不准备用这么耗时耗力的方法，他放弃了
记忆HttpClient的爬虫，选择了内置浏览器引擎的爬虫（关键词：PhantomJS, Selenium），在浏览器引擎运行页面，直接获取了
正确的结果，又一次拿到了对方的数据。


只要人类能够正常访问的网页，爬虫在具备同等资源的情况下就一定可以抓取到。
（想想淘宝有多少开发人员，你一个人是不可能与他们正面刚的！）

#关于爬虫的建议
不要只看web网站，还有手机App和H5，它们的反爬虫措施一般比较少。

如果真的对性能要求很高，可以考虑多线程和成熟框架。甚至分布式

关于爬虫与反爬虫，参考：携程技术中心--携程酒店研发部研发经理崔广宇的爬虫与反爬虫的技术分享













