

主要内容是程序运行时的数据结构，包括运行时程序中的不同部分如何分配内存、函数调用的内存实现、

还介绍了一个c独有的强大功能，一个被称为“展开堆栈”（unwinding stack）的技术。

编程语言的的经典对立之一就是代码和数据的区别。代码和数据的区别也可认为是运行时和编译时的界限，
编译器的绝大部分工作和翻译代码有关；必要的数据存储管理的绝大部分都在运行时进行。

简单说下“a.out”的由来吧：

它是assembler output（汇编程序输出）”的缩写形式。但是，他不是汇编程序输出，而是链接器输出。

这个名字曾被解释为：“新程序就绪，准备执行”它是链接器输出文件。

一般的说，可以认为连接器输出的是二进制文件，这个文件并不是杂乱无章的放在一起的，而是由一定的存放规律。
比如说分类存放，这就涉及到了我们接下来要讨论的段的概念。
