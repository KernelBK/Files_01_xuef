

##8.1 Python 虚拟机中的执行环境
"""
PyCodeObject 对象包含了最关键的 字节码指令，以及关于程序的所有静态信息。
然而有一点，是它没有包含的，这就是关于程序运行的动态信息---执行环境。
"""

###8.1.1 Python 源码中的 PyFrameObject

###8.2.1 module
"""
1.代码复用
2.为系统划分名字空间

名字最终的作用不在于名字本身，而在于名字背后对应的那个事物。
对 Python这类动态语言来说，名字的意义比对 C 这样的静态语言的意义大，因为名字是 Python
在运行时能够找到其所对应的东西的唯一途径。

一个 module 定义了一个独立的名字空间。
"""

###8.2.3 作用域与名字空间
"""
LEGB
"""

##8.4 运行时环境
"""
逻辑上的 interpreter,(PyInterpreterState) 模拟进程

模拟线程(PyThreadState)

每个线程都会有一个函数调用堆栈。
"""

###PyFrameObject








































