
#https://blog.csdn.net/ce123_zhouwei/article/details/8976652
#
"""
编程语言最终的目标，本质上无非是回答两个问题：
1.如何表示信息；
2.如何处理信息。

存储与计算

在如何表示信息这一问题上，编程语言通常需要定义一些“基本存储单元”，作为整个语言世界的基本构成要素。
这种思想很类似于我们对物理世界的认识——宇宙虽然鬼斧神工，丰富多彩，但是在微观上，整个世界仅仅是由
少数寥寥几种基本粒子构成的（物理细节不必深究，这里只是打个比方）。但是奇怪的是，基本粒子就只有几种，
为何却能构成地球、水、人、树、风这些看似截然不同的东西呢？答案在于，基本粒子虽然不多，但是自然界确立
了一套简单而精妙的组合规则，使得基本粒子能够以许多种不同的方式组合在一起，由于组合方式的不同（结构差异），
组合规模的不同（数量差异），导致了最终宏观表现的不同。

其实就“存储”概念而言，我们用二进制方式，以字节为单位来实现信息的存储，已经给出了信息表示的
“终极答案”了。但是完成存储，只是整个计算机系统功能的一部分。如果仅仅是把信息存储，而不进行计算，
那么计算机就不叫计算机，改叫存储机了。可见，问题的实质在于，我们要存储，更要计算。


我们也知道，在一些语言中，不需要我们对类型进行显式的说明。但是不说明不代表不存在。
只不过一个是程序员显式声明，一个是编译器（或解释器）自主推导；一个是把责任推给程序员，
一个是把责任推给编译器作者。类型系统总是内在的存在的。永远没有被去除。
"""

#type system
"""
在我们讨论的编程语言这一领域内，当提到“类型系统”时，系统其实就是指：
1. 一组基本类型构成的“基本类型集合”；
2. “基本类型集合”上定义的一系列组合、运算、转换方法。

“基本类型集合”是一个非常小的有限集合，也就寥寥几个元素，而“组合、运算、转换”等规则，
也是一个较小的有限集合。但是通过选择不同的元素进行组合，这两个有限的集合之上，却衍生出
了一个无限集合——“类型空间”。


"""













