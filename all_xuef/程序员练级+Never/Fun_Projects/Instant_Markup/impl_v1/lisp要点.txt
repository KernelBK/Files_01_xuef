{lisp要点}

#lisp要点

学习Lisp所收获的是如何“自由地”表达你的思想，这正是Lisp最大的魅力所在。

## lisp之道

真正的Lisp之门不在函数式编程，而在S表达式本身。

普通语言的问题就在于表达What的手段非常有限，无非是过程、类、接口、函数等几种方式，
而诸多领域问题是无法直接抽象为函数或接口的。

由于普通语言语法和语义的紧耦合造成了这种刚性。

如果你认为“语法和语义紧耦合“是理所当然的，看不出这有什么问题，那么理解Lisp就会让你对此
产生更深的认识。

当你看到Lisp的(f a (b c))的时候，你会想到什么？会不会马上联想到函数求值或是宏扩展？
就像在C语言里看到gcd(10, 15)马上想到函数调用，或者在Java里看到class A马上想到类定义一样。
如果真是这样，那它就是你理解Lisp的一道障碍，因为你已经习惯了顺着语言去思考，
总是在想这一句话机器怎么解释执行？那一句话又对应语言的哪个特性？
理解Lisp要反过来，让语言顺着你，Lisp的(f a (b c))可以是任何语义，完全由你来定，它可以是
函数定义、类定义、数据库查询、文件依赖关系，异步任务的执行关系，业务规则...

Lisp并不限制你用S表达式来表达什么语义，同样的S表达式语法可以表达各种不同领域的语义，
这就是语法和语义解耦。

