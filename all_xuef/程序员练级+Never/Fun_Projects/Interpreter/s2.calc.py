#我们会编写 Python 程序来接受字符串作为输入，并返回求值结果。
#计算器语言解释器的核心是叫做calc_eval的递归函数，它会求解树形表达式对象。
"""
'(* (+ 1 2) (+ 3 4))

"""
##对二叉树进行求和的时候，在每个子树节点，我们都做加法。
##而对表达式进行解释的时候，在每一个子树节点，我们不一定进行加法。
##根据子树的“操作符”不同，我们可能会选择加，减，乘，除四种操作。



##########################################################
#1. 基本表达式: int, float (值为自身 eval to self)
    ##计算器语言中唯一的自求值表达式就是数值，但是在通用语言中可能也包括字符串、布尔值，以及其它。
#2. 所有复合表达式都是调用表达式。
"""
Exp:
    int|float
    (operator Exp Exp)
"""
##########################################################

#解析器实际上由两个组件组成，词法分析器和语法分析器。(字符串(代码)-->表达式)
##首先，词法分析器将输入字符串拆成标记（token），它们是语言的最小语法单元，就像名称和符号那样。
##其次，语法分析器从这个标记序列中构建表达式树。

##求值器(表达式-->值)


#分词器
##拥有更加复合语法的语言可能需要更复杂的分词器。特别是，许多分析器会解析每种返回标记的语法类型。
##例如，计算机中的标记类型可能是运算符、名称、数值或分隔符。这个分类可以简化标记序列的解析。














