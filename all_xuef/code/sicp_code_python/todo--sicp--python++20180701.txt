
chap2
1. 有理数系统
2. 符号微分
3. 集合的表示
4. 信息编码
5. 通用型操作
6. 数据导向的程序设计（强大的系统设计方法）
7. 实现--多项式符号算术的程序包




算法学习的一些资源（xuef，18.7.8）
1. 数学 
主要先掌握归纳法和一些用来分析时间复杂度的常用函数，你肯定没问题了。可以跳过！
《算法引论》第5章--归纳法
《线性代数及其应用》《微积分》

2. 解决问题的一般性思维 
波利亚《如何解题》《数学的发现》《数学的猜想》
第一本我读过一点。但是这几本都是我想读的。
费曼关于如何思考和解题的建议

3. 计算机科学（《SICP》）
《SICP》即《计算机程序的构造和解释》函数式编程以及编程的本质
《Composing Programs》（Python版本的《SICP》）

4. 各种范式编程语言 
Python、Lisp、Java
Lisp的学习对于掌握递归思想以及函数式编程思想很有帮助

5. 数据结构与算法
《Algs--Java》《Algs--C》这两本都是 Rebort Sedgewick 写的，我是看这个入的门
《程序设计抽象思想--C语言描述》递归部分讲的很好
《ANSI Common Lisp》部分章节对于递归讲的也很到位

6. 算法设计 
《算法分析和设计基础》 关于算法背后的思想，我读了一半。但是要先对各种算法都了解后再看这本
《算法引论》 我就看了一点点，有点难
《算法导论》 我是看了几节MIT的网络课程，书还没来得及看

7. 编码、解决问题
leetcode解题

8. 准确定义和描述问题
《编程珠玑》

# 课程（可以作为书的辅助，有时会碰到不懂的）
《MIT--算法导论》《MIT--计算机程序的构造和解释》《MIT--线性代数》《MIT--人工智能》《浙大数据结构》《MIT--微积分》



《信号与系统》
《CSAPP》