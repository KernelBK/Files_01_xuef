
1. 建议未刷过题的新人按着顺序来。前 150 题覆盖了很多经典题目和知识点，指针法类如『3 sum』系列，
动规类如『regex matching』，搜索类题目如『Sodoku Solver』。

2、基本熟悉知识点（图、树、堆、栈、链表、哈希表、记忆搜索、动态规划、指针法、并查集等）后，
可以一类类标签强攻。Leetcode 右侧的标签系统虽然未必 100% 完整，但是大致分类做得还不错。

3、面试前的一个月可以只做『Hard』标签的题目，因为一般两遍之后对于大部分『Medium』难度以下的题目都是肌肉记忆了。
多练习『Hard』类题目可以让自己的思路更开阔，因为很多题目使用的奇淫巧技让人惊讶，比如 Leetcode 精心设计
连续题号的『84. Largest Rectangle in Histogram』、『85. Maximal Rectangle』。

4、善用收藏夹，要养成『一道题第二次练习尚不能解就加入收藏夹』的习惯，且需要定期清空收藏夹：每道题不需提示下通过两次后才能移出收藏夹。

5、面试前可以购买会员，按照公司的标签来练习，也可以结合白板练习。
面试前如果时间紧迫，那么练习的优先级分别是：即将面试公司的题目、收藏夹里的旧题目、剩余的新题。

6、冲刺阶段的练习请尽量不要打开题型标签，给自己思考的空间。

7、如果真的刷了三遍以上还没法达到理想目标，那么一定是学习方法出了问题，请多总结。


排名最靠前的答案说按tag刷，这样做其实有个小弊端，就比如你刷greedy or binary search的时候，你一开始就会往这些思路上想，
倒不太利于独立思考。个人感觉时间充裕的话可以按难度或者顺序或随机刷题，强化某方面算法知识的时候可以按照tag来。


## 刷题的目的
切莫本末倒置，做leetcode的目的不是A掉它上面所有的题目，而是提高自己的代码和解题能力。所以不要用解题时间来衡量效果，
而需要多总结和反思。遇到某些题目属于自己不会的类型，宁可放下leetcode去读一下有关书籍的有关章节，再回来解题。尽量每题都弄懂，
会做的题目类型要熟练地持续地做对。以我个人经验来看，花12个小时刷掉最简单的75题给你带来的提高，往往不如花12小时学习一种自己
曾经不会做的题目类型并解决一两道这类题目所带来的提高要大。
作者：路路
链接：https://www.zhihu.com/question/24604588/answer/28354694


## 如果不难，还有什么意义？
建议按通过率从低到高做，通过率太高的题目有些水，12小时75题，这些题目应该大多是半分钟想出方案，五分钟以内写完，
再修复一些小编译错误，不需要太多思考。不需要太多思考，自然提高也不会太多。另外写完了再多看看，简单问题争取一遍AC, 
bug free代码还是能给面试官留下好印象的。
作者：QAMichaelPeng
链接：https://www.zhihu.com/question/24604588/answer/28678116


Leetcode对认真学过数据结构和算法的且智商100左右的童鞋其实不难的。都是基础题


leetcode需要扎实的算法和数据结构基础，在做题时思考方法，提高编写代码能力才行，如果只看答案，后来会发现还是不会，做
题切忌心浮气躁，12小时75题是太快了，根本消化吸收不了，建议楼主静下心来，每天一道，好好思考其中的方法，查缺补漏。
这种东西，更需要耐心。
作者：lemon wonder
链接：https://www.zhihu.com/question/24604588/answer/28370583


Easy还是很好做的，基本上都是简单的模拟题，难点是在看你会不会处理一些边界情况，比如说在链表上删除元素要考虑在头结点的问题。
然后medium的话感觉主流是dfs，bfs的搜索和一些简单的算法比如二分，一般仔细想想还是能做出来的。
hard的话确实有一些比较难，各种dp,各种greedy，或者是代码量比较大的数据结构，字符串处理等等，这些以前没做过ACM的话确实想出来的几率不大，
或者说能想到也是O(n^2)的暴力，很难想到O(n)的最优解。然后我感觉12小时75题确实是太快了，感觉题主某些题可能不是最优解或者直接用库了，
比如求next permutation就直接调用了next_permutation。。。其实我觉得国内的面试题以easy居多，撑死了就medium，hard没遇到过感觉真的挺少的。
所以时间有限的话可以以后再做hard，然后我感觉leetcode一定要自己先想，比如说早上起来看一道题，然后在地铁里或者吃饭的时候都可以再脑子里慢慢想，
实在想不出来在看题解，不然可能今天刚看完过几天又不会了。
作者：知乎用户
链接：https://www.zhihu.com/question/24604588/answer/55970280


去年找互联网的工作，刷了两遍LeetCode，只做了前200道。面试过程中碰到的算法题基本都被秒杀了。最后拿了9个offer。
我是按Tag来刷的。链表，二叉树，回溯，深度宽度优先遍历，图，贪心，动规，数组，哈希表……每个tag由easy到hard，每道题先自己思考，
不会的参考了一个开源的解答或者参考Discuss或者博客。开始的时候自己独立思考的时间比较长，后来没了耐心，不会的题目就马上看解答了。
一般题目解法有多种，这时候最好尝试一下其他的做法，至少要知道思路。比如有关图的题目就会有DFS和BFS两种解法。Discuss里一般都会有高质量的解答。
关键是每道题都要弄明白。一开始用IDE，跑出正确结果，再在线默写代码。后来写的多了，直接在线写代码了。这是一个自然的过程，做的多了就有“手感”了。
总结一下，按tag由易到难，每道题弄清楚，知道其他的解法，这是核心！搞定了核心，其他的技巧都是锦上添花了。
作者：知乎用户
链接：https://www.zhihu.com/question/26580300/answer/144589637



