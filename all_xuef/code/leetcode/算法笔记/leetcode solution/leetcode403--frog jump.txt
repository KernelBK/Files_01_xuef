
https://leetcode.com/problems/frog-jump/description/
题目中说青蛙如果上一次跳了k距离，那么下一次只能跳k-1, k, 或k+1的距离，那么青蛙跳到某个石头上可能有多种跳法，
由于这道题只是让我们判断青蛙是否能跳到最后一个石头上，并没有让我们返回所有的路径，这样就降低了一些难度。


[Thoughts]
对于每一个石头，设置一个set用来记录从左边跳过来的步数有哪几种，然后根据这个set再算，从当前石头上，可以调到右边哪些石头上。
最后只要判断最后一个石头的set是否为空，就可判断青蛙能否跳过河。

xuef: 假设青蛙现在某位置(pos)石头上, 这里仅仅用pos是无法表示这种状态的！你还得要一个last step才能唯一的充分的表示这一状态！
这就是这一题的关键所在。这让我想起了不同时间出发会有不同路径权重的最短路径问题。（MIT-算法导论 讨论课）

利用元组(x, y)表示青蛙跳跃的状态：x表示位置, y表示上一跳的单元数。

# 解题思路1：
广度优先搜索（BFS）

利用元组(x, y)表示青蛙跳跃的状态：x表示位置, y表示上一跳的单元数。

初始将(0, 0)加入队列q，利用二维数组v记录元组(x, y)是否被访问过。

循环遍历队列q，根据队头状态扩展队列，直到队列为空。
