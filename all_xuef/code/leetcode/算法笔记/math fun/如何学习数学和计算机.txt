

前言：
为什么一直想要写这个如何入门学习计算机和数学？
计算机特指编程，其中包括如何入门知乎上经常叫嚣程序员三大浪漫之二：操作系统和编译原理，图形学我不懂
这里也就不讲了，不过我觉得有这些基础学图形学应该不难。数学主要是分析
和几何，优化，概率，随机过程，统计。
首先这些是各个工科专业课，包括生物统计
，生物信息学，控制，自动化，力学为基础相关的工科比如土木，力学系，热能系
机械系等需要的数学知识，计算化学，计算数学，物理仿真，材料仿真等等需要编程和数学的
基础课。

其次我在大工，这里我也写上中科大和中科院吧，要不又有人以为我黑大工，在这
三个地方都上过编程和数学的课，还有看过清华的公开课，一句话都是垃圾，我
的评价标准很简单，就是上完这个课，学不懂就是垃圾，即使修了大概这么多门课，还
时不会编程，考研数学考130多也觉得线性代数没学懂，极限是什么东西，拓扑是什
么鸟玩意，怎么这么奇怪的定义。还有就是国内的课烂课太多，占用学生时间，而且一学期5,6门课，不明
白指定课程计划的老师是不是脑残？我自学的时候觉得一般课程2个月一门，难的课
比如泛函分析半年多一门，而且大工必须课已经给你选好了，你必须上，不能根据
自己的能力选这个学期上还是下个学期上，这点中科大比大工好，虽然讲的和大工差
别不大，至少可以根据情况自己少选点多补补。
最后就是课程设置的问题了，比如热能，虽然本科毕业快10年了，
计算机的课什么计算机文化基础，计算机组成， c语言我记得就好几门，可是上完了，c语言一堆人不会编，
，电路，电子这些不必要的课，虽然电路电子的实验设计的还不错，要是像公开课，有
问有答也算不错的课。如果是我现在设计课程的话，热能系的课就一个热能相关的课题+我上边的计算机
和数学课缩减为本科生能上完的，加上力学两三门，大学物理和实验一门，加机械原理，设计，制图就可以了
，专业课都没有必要，大部分本科生毕业如果工作的话，这些基础足够在制造业，最常见的就是工厂
，后边我再讲讲为什么，或者当个程序员也没有问题，

看大部分论坛都说很多程序员堆栈都分不清，只会增删查找
，至少我给计算机的课把程序运行过程编译原理从文本文件如何翻译到二进制，如何又操作系统调用进cpu运行。
还有嵌入式arm上编程，大部分手机都是基于arm的，所以手机编程的底层也知道了，对传统行业的，大部分
需要采集数据，嵌入式处理，再输出的，或者信号处理之类的课的也是极为有用的。


二 如何学习数学？
2.0 我曾经有过的误区：
第一就是不理解定义，只刷题，所以即使考研130多，后来觉得很多还是不懂。
不过有几门课还是要刷题，就是线代和概率和单元和多元微积分，后边再抽象的数学，记住都是转化为这几门加实数R的性质就是数学分析。
没有google搜索自己的问题，比如拓扑，这个定义应该是最早接触，当时只是好奇了下，后来
发现在微分几何和泛函和随机过程都极为重要，不理解拓扑定义，数分，泛函和微分几何应该不能算懂。
第二就是迷茫不知道入手，知道数学重要，不知道怎么下手
我自己的经历是先编程计算，再理论，或者一门课既有理论又有编程计算，再到纯理论的，先对这门数学课
到底有什么用？到底做什么的？再到理解其中的一些核心定义，比如先编程线性代数各种算法，如何知道采样点
估算概率密度，计算概率函数，又右这些产生新的采样点，知道这些又计算概率之类的东西，一路编程计算下来，
概率和随机过程的抽象的
泛函的拓扑定义，概率和随机过程的测度，代数和sigma代数。
这样的话，数学的教材设计的计算的，你都有清晰明了的一个个的数字对应，觉得心里有底，不会慌。典型就是
概率和随机过程，统计这几门课，不编程和编程学这几门课，入门难度增加几个级别，当时在大工的概率是没有
编程的，现在也还没有的话，如果有老师看见，可以看看我下边推荐的概率的课。

第三是用国内烂教材，烂课，烂老师
应该有好的，不过国内这个工资和考核制度，上个课不如驾校教练，新东方厨师挣得多，要我也不愿意费力不讨好
。不过我觉得现在公开课这么多，我的这些课大部分可以到研究生了，包括数学教材有的也是国外数学系的研究生的课
。研究生是硕士和博士，硕士在国外据说都过度学位。我在科大，就有老乡是博后还听泛函的，还有基本上所有同学
学了泛函，还是不理解，我在科大修完泛函后，即使快90分，大概排10%吧，按理说学的不差，还是觉得不懂，后来
又花半年时间学了泛函，自我觉得才入门吧，知道这门课到底做什么的。后来自学完这门课后，学别的数学基本无压力。
学编程也无压力，所以推荐本科生早学习吧。

第四是觉得数学和编程随便凑合，应该不影响工科的专业课！！！！
naive,simple，我应该算跨三个专业，热能，控制，人工智能，自从把重心转向数学和编程，80%数学编程，只需20%
的时间就可以学专业课，还可以理解的更好，很多专业课你觉得很难，想问别人，也不容易问到的，在数学这里，根本不是
问题，你学起来也容易。。
第五，别看我推荐这么多
要刷的就线性代数，概率，单和多变量微积分，泛函，泛函你应该至少会问100个问题，并且解决，最重要的是为什么定义拓扑
，距离，范数和拓扑的关系，泛函分析这门课和数学分析（实数轴）和线性代数的关系，这几个问题理解了，你应该
总体能理解泛函这门课了

就是学习顺序，我尽量画个拓扑图
我先把所有课程列出来
（0）mit 的线性代数，教材是http://vdisk.weibo.com/s/aIVHkZGQ4u7Ym,这是第四版，
第五版在这里http://math.mit.edu/~gs/linearalgebra/，网上有视频，记住一定要刷作业
https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/Syllabus/，
有问题找个研一的学生一般都能解决，或者加个线性代数群，google搜索问题，应该没问题。
(1) 单变量微积分， coursera和edx上有。
(2)多变量微积分 https://ocw.mit.edu/resources/res-18-007-calculus-revisited-multivariable-calculus-fall-2011/part-v/
说到这里，你们一般都上过微积分的，可以再做做作业试试自己水平，知道差距。
概率 coursera和edx上有，自己找，或者我有空补充吧。
还有个是coursera上的Massively Multivariable Open Online Calculus Course 不过只有多变量微分。
先修课程：单变量和线性代数

(3.1)概率和随机过程：Monte Carlo Methods in Finance， 这个在iversity和
先修课程：线代和微积分，matlab
(3.2)http://www.math.uah.edu/stat/foundations/Measure.html，
先修课程：泛函，数学分析，3.1的课程，编程计算过。
理解这本书的前四章，你概率，统计，随机过程，随机微积分和实变函数应该都能理解，
记住只要理解前4章，前4章，前四章到积分定义。
(4.1)优化1，就是stanford 这个https://lagunita.stanford.edu/courses/Engineering/CVX101/Winter2014/about
先修课程：线代和微积分，matlab，分析会更好，
(4.2)优化2，http://web.stanford.edu/class/ee364b/，这个是凸优化2
先修课程：线代和微积分，matlab，优化1
(5.1) understanding analysis 数学分析，
这个学泛函时读教材一两遍即可，下边会讲为什么学分析。
(5.2)泛函分析，https://www.coursera.org/signature/course/functionalanalysis/972996。这个课和前边
的。
先修课程：线代，微积分，(5.1)，topology的定义能够理解。coursera的课能拿90分和前边我说的几个问题理解
基本算泛函过关了。
(6)统计推荐 All of Statistics:A Concise Course in Statistical Inference. 这个是课还有作业
http://www.stat.cmu.edu/~larry/=stat705/，叫36-705 Intermediate Statistics
先修课程：编程，线代和微积分，优化1，matlab，(3.1)，想彻底理解概率里的积分微分，理解概率定义(3.2)前4章
(7)几何推荐 Modern Differential Geometry of Curves and Surfaces with Mathematica 
先修课程：线代和微积分，编程有点基础，因为用的是Mathematica，直接学就行，网上可以下代码，比较老的Mathematica版本
有的函数不能用，编程有基础，会改来能云行就行。
和(8)introduction to smooth
manifolds
先修课程：线代和微积分，（7），学完推荐的泛函分析及先修课程。

学习过程中记住，任何你觉得再抽象的公式，计算都是数字，测度和概率哪里再抽象，抛一次硬币和连续抛硬币，
足够你理解测度和积分的所有定义。

最后对工科或者经济之类的本科学生，我觉得应该掌握的，是（0），(1)，(2)，(3.1)，(4.1),一门课2个月
差不多也是1年的课程量，学习顺序也差不多是这个顺序。如果是硕士和博士的话，看你需要哪个就继续学习吧，
比如需要很懂优化就(4.2)，想彻底理解概率和随机过程或者统计的公式不懂就(3.2)。
不论本科还是硕士博士，学习数学最好就是从应用出发看最新论文怎么解决，用什么方法，方法有什么数学，
你有什么想法，能够抽象成数学吗？比如是优化问题就去优化，是统计问题去学统计，统计学不懂就学数分和泛函优化。
对工科硕士和博士，我强烈建议全部学吧！！！

三 如何学习编程？
最大最大最大的误区，编程就是学c语言，学java语言，学c++语言！！！！！！！！！！
国内老师一直没讲，基本没人指点的话，容易陷入的误区，即使抱着一本语法书，或者c语言，或者java，21天c++什么的
一直学啊，可是真的编程还是不会，自己写还是不会下手，看完本文应该知道，或者至少会linux，c，java，数据结构
，git,维护代码,写简单测试，操作系统，读大的工程代码，知道程序怎么样从文本文件翻译到2进制，高低电平，
怎么由操作系统调度运行，多个cpu怎么启动的，多线程是什么？中断是什么？怎么调试代码？io是什么？
linux的shell接口怎么实现的？怎么用嵌入式搭一个东西，设计传感器的，接收采样或者模拟数据，处理，然后发出命令给控制结构，
可以是led，电机什么的。
学编程是一些列的课，我这里推荐的就是入门用的，适合大工所有工科或者经济，管理
什么的用到编程的，或者计算机系的，我的这些课，不夸张的说，学不懂编程过来踢我。而且学完基本和国内外计算机系
自动化的编程能力应该差距不大，估计少了一些软件工程的东西。
第二个一上来就学框架，之前有学弟在吧里问我，想做java，我觉得有我推荐的这些编程基础，你很容易自学别的编程课。
比如做仿真，有限元的，学个高性能计算的关于cuda,mpi再google个课就是了，想做web开发，公开课都有，学完我推荐的
加上计算机网络和数据库最够你了，想分布式，有计算机网络和我推荐的课程基础，和你自学了这么多课的强大自学能力
学别的也没问题，想前段，web开发，待会推荐一个微博公众号，里边有编程，web，前端，机器学习的资料每天都有推荐
。
第二个误区，理解不了编程的重要性！！
数学没有计算机，就像小李飞刀没有刀的感觉，编程就是让你把数学能解决的问题更扩大，比如优化要迭代1000次，你
手算怎么算？！！至少10年前大工的课极度不重视，一堆垃圾计算机课
，什么计算机文化基础，计算机组成，计算机原理，c语言，还有校2级，这些都不用学了，设置电工和电子上下，也不用了。
这两门课看似是计算机基础课，其实离应用8000里，最实用的是我待会会推荐的嵌入式，会嵌入式和我推荐的编程课，你
反过去学习这两门课也易如反掌。
而且我上边推荐的数学课有的就已经有编程了，还有比如有限元高性能计算会用cuda，mpi这些，没有编程基础，学起来也费劲。
比如机械设计里的cad，不是那个画图那个cad，是图形学的cad，还有力学有限元仿真，你会我说的这些编程，要科研的时候
必须某篇论文有代码，你上github上，git clone下来，读不读，改源程序实现自己的算法，这些在工科硕士博士，贯穿始终。
你有我给的这些课基础，很容易上手，不至于写代码不会，调试不会，怎么改人家代码不会，科研就不用想了！如果觉得
不对的，你赶紧去实验室，要是你做力学，材料，有限元仿真，热能仿真，燃烧仿真，图形学，自动化，应用数学，经济学。
rice大学编程三部曲,编程入门：

学习Python 语法，编写gui程序，写游戏，写测试，还有算法数据结构有涉及。
1.0 An Introduction to Interactive Programming in Python
1.1 Principles of Computing
1.2 algorithm thinking

2 http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/

3 编译原理，更具体说是个解释器
https://ruslanspivak.com/lsbasi-part1/ 加上作者推荐的compiler的教材，你想看，不想看也行，主要看自动机相关的，一般是前几章
不过如果你写完这个解释器，再修后边的课，去courera修stanford的compiler没问题了

4 数据结构和算法：
如何让程序跑的快，知道程序为什么慢！！
https://zh.coursera.org/learn/algorithms-part1#syllabus和https://zh.coursera.org/learn/algorithms-part2
这里，不推荐mit的算法导论，不适合初学者，教材用里边的就行。虽然是java的课，其实我觉得有面向python和c的基础
应该没有问题，c语言不用单独学，在嵌入式学，后边有课

5 The Hardware/Software Interface 
有人说如果计算机系只学一门课，就它，从编程角度理解计算机系统，不过我觉得这门课学完，很多疑问在操作系统里
才能解决，如果你也这样，学操作系统吧。
https://www.class-central.com/mooc/453/coursera-the-hardware-software-interface
不过这门课好像下线了，教材用的cmu的computer Systems: A Programmer's Perspective 可以下pdf，
如果coursra上没有，http://courses.cs.washington.edu/courses/cse351/16au/videos.html这里的视频还保留有
不过就是没有问问题的地方，可以先修别的能问问题的，有感觉了再修这个。一定做编程作业！！！
这样你会汇编，反汇编，gdb调试汇编，知道从磁盘到内存到cache到register的计算机存储结构

6 嵌入式三部曲
6.1 mbedded Systems - Shape The World: Microcontroller Input/Output
6.2 Embedded Systems - Shape The World: Multi-Threaded Interfacing
6.3 Real-Time Bluetooth Networks - Shape the World
https://www.edx.org/bio/jonathan-valvano 作者在edx上的网址，下边三门课的链接。不过会大概买1000左右的硬件
建议几个人一起买一套。。
如何用嵌入式采集数据，模拟，数字，输出，数字信号处理和控制类专业强烈建议先修这些，还有这个是arm，没有
保护模式比intel的操作系统简单，写这个练手，能够熟悉计算机组成，就cpu，内存，寄存器，io，直接亲自动手
学完不用学计算机组成原理了，里边还有c语言，也不用学习c语言了，c语言这种底层的语言，由嵌入式这种入手
最合适不过了。

7 教材：实模式与保护模式， 李忠，唯一一个国内的教材
mit操作系统的先修课，建议把代码跑完一遍，书看一遍就差不多了，主要还是mit操作系统。
网上下pdf有个群（92033881，汇编底层的可以过去问），作者李忠在里边，他qq我也有，不过不方便给你们，
学这个，计算机组成原理，和别的教材的汇编都不建议你们学了。代码跑完一遍，书看一遍，除了多cpu启动没讲，
别的基本涉及了。

8 mit 操作系统
https://pdos.csail.mit.edu/6.828/2016/
修完 1， 2， 3， 4， 5， 你可以学操作系统了，5和6一起修最佳。
学完这个你知道程序怎么进内存，知道文件系统，更理解intel cpu的多线程，保护模式，i/o抽象，多cpu启动之类的

学习顺序：
第一大步：1，2，3，6.1, 4， 5这个顺序学习，哪个能在你当前的编程能力就学哪个，没有就跳过
第二大步：以mit操作系统为核心，5,6.2，6.3，7, 8学习，看懂哪个就学哪个，有的课比如5这种只有学完8的操作系统
才能完全理解，有问题能解决的尽量解决，不能的这个写完自然就懂了。

对非计算机 非电信，非电信什么的本科生，推荐1， 2， 4, 5， 6.1，差不多1年半课程量，这样，比如内燃机专业的
，你再学习，机械设计，原理，制图，画法几何，大学物理，和实验，加理论力学，加金工实习，你们去工作也够了，
想转行也方便，制造类企业这几个机械设计，原理，制图，画法几何就够了，不过不建议去，大部分是被埋没的，你考
公务员也比这个强。。
对计算机， 电信， 电信，数学按前边的，计算机类课程这个全部修吧，剩下的没提到的课看你兴趣和有能力学就学，
没有学会选择性放弃，可以是抄作业过，可以是什么的随便。。
对数学类的，我的很多教材就是数学系本科或者硕博的教材，强烈推荐，编程按非计算机学习就行。

剩下的想学web，想分布式计算，想深度学习，特别想深度学习的，可以问，我在推荐课程，
最后一定要关注weibo公众号：好东西传送门，爱可可爱生活，会推荐编程，机器学习，web，前段开发，之类的课程或者
论文，或者国内外进展，一定要关注！！！！一定要关注！！！！一定要关注！！！！
基本你做其中一样，都学完，基本都能找到1.5万左右或者以上的工作。

最后再说一遍，国内大学基本都是垃圾，老师基本都烂，有好老师，不过很难遇见，你们也很难分辨，本科开始进实验室
写论文，刷gpa出国也尽量换到it，经济，金融，数学（有编程基础的前提）吧。
第二找工作，现在只推荐你们入it，金融，公务员，军队，体制内研究所。
第三看着这么多自黑的，也是醉了，黑归黑，问题也确实是问题，不过想通过国内别的学校的话，你会失望的！！
出国的话，看就业报告，大工基本是中科大，南大，浙大下边这个level了，就业的话，先转专业到计算机和金融，这俩工作
机会薪水比别的高一个level，或者几个level，化工拿5000不错，it可能实习生就比这个多。
再北上深三个城市的985，去别的学校和大工比，有可能有优势，但是基本都一个level了，计算机的话，你按我推荐的学完，
分布式，云计算，深度学习，随便学一个，以后都能不错，反正比如北大现在的操作系统课就是mit的作业改的，你说找工作
去北大还可以说，学术的话都出国吧，国内学校在我看来都是国际大三流，有的学科和国外学校交流的紧密会前言点，基本
90几都跟风研究。。。


在这个过程中我深刻的感觉到，如果要快速提高自己的编程水平的话，你必须总是去做一些你做得出来，但是难度大到只要再难一点点你就做不出来的事情。再这么坚持好些年之后，肯定会进入高手的行列。
