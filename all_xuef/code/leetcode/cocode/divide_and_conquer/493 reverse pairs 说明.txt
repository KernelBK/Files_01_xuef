493 Reverse Pairs (Divide and Conquer)
问题:
	Given an array nums, we call (i, j) an important reverse pair if i < j and nums[i] > 2*nums[j].
	You need to return the number of important reverse pairs in the given array.
	Example1:
		Input: [1,3,2,3,1]
		Output: 2
	Example2:
		Input: [2,4,3,5,1]
		Output: 3
解：(Divide and Conquer求解过程的一般化描述)
	对于列表 nums, 其reverse pairs数目记为 rp(nums);
	我们从中间(mid)将nums切分为左右两部分, 那么rp(nums)由3部分构成:
	1. rp(nums[start-mid])
	2. rp(nums[mid-end])
	3. 交叉逆序对(i,j), i来自左半部分, j来自右半部分
	对于步骤3, 如果nums[start-mid], nums[mid-end]都分别有序的话, 将使工作高效的多;
其他解决方法:
1) Brute Force
暴力求解能够加深我们对问题的理解;(但是, 我觉得暴力求解并不总是有帮助, 因为很多时候我们需要换个角度看问题)
2) sort left + binary search
从左往右扫描, 如果左侧列表有序, 会提高逆序对的查找效率; 问题在于左侧列表不是静态的, 它会不断改变, 所以我们得不断排序;
3) BST
维护动态表的有序性, 我们需要BST(Binary Search Tree); 问题在于二叉搜索树可能会变得不平衡, 那将失去log(n)的查找效率;
4) BIT (尚不理解)
5) Modified Merge Sort(Divide and Conquer)
我用的就是这个方法; 开始我使用 merge 来排序, 但是会有case超时, 改用内置排序方法后才通过测试。

https://leetcode.com/problems/reverse-pairs/discuss/97268/general-principles-behind-problems-similar-to-reverse-pairs


