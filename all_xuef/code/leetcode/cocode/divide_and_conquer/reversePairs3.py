"""
之前的排序部分, 我用了自己的归并排序, 但总是有case会超时;
这里使用了内置排序方法(写一个高效的排序方法看来很难)
"""
from bisect import bisect_left

# lst[start-mid](包括mid) lst[mid+1-end]都是有序的; merge将两者原地归并
def merge(lst, start, mid, end):
    i, j = start, mid+1
    res = [0]*len(lst)
    for k in range(start, end+1):
        if j > end or (i <= mid and lst[i] <= lst[j]):
            res[k] = lst[i]
            i += 1
        else:
            res[k] = lst[j]
            j += 1
    for i in range(start, end+1):
        lst[i] = res[i]
# 计算 lst start-end(包括end) 的reverse pairs数目;
# 并将lst[start-end]归并排序(为了方便统计交叉reverse pairs 数目)
def mergesort_and_count(lst, start, end):
    if start >= end: return 0
    mid = (start + end)//2
    # 这里的count是左半部分reverse pairs数目+右半部分reverse pairs数目
    count = mergesort_and_count(lst, start, mid) + mergesort_and_count(lst, mid+1, end)

    # [2,3,4] [1,5]
    # 至此, lst[start-mid] lst[mid+1-end] 都已有序; 下面的代码利用了这一点
    # 统计 reverse pairs (i, j)的数目, i 来自[start,mid], j 来自[mid+1, end]
    i = start
    for j in range(mid+1, end+1):
        while i <= mid and lst[i] <= lst[j]*2: # 利用了有序性
            i += 1
        count += mid-i+1
    # 至此, count是lst[start-end]的所有reverse pairs的数目
    #print(start, "-", end, "all recerse pairs: ", count)
    # 原地归并排序 lst[start-mid] lst[mid+1-end]
    #merge(lst, start, mid, end)
    lst[start:end+1] = sorted(lst[start:end+1])
    return count


lst=[2,3,4,1,5]
#lst=[1,3,2,3,1]
#lst=[2,3,6,7,13,18]
lst=[2566,5469,1898,127,2441,4612,2554,5269,2785,5093,3931,2532,1195,1101,1334,2124,1156,3400,747,5046,3325,4039,1858,3655,4904,2255,1822,972,5175,2880,2776,4900,2172,3808,3441,4153,3969,3116,1913,5129,4839,4586,752,1804,1970,4052,5016,3781,5000,4331,2762,4886,826,1888,1175,2729,1610,1634,2773,543,2617,4990,3225,2962,4963,3575,3742,3424,3246,5067,133,2713,2667,4043,663,3442,1714,386,3864,1978,1363,27,630,4652,1537,1770,893,2676,2608,3842,4852,5248,832,1689,1033,3849,1471,3373,2764,2453,5272,1313,1005,5083,2191,4525,2706,915,5230,3833,5011,4531,2864,1581,3300,1367,4668,5104,1005,2842,2654,2108,5046,1398,5278,3665,2488,4944,3173,2897,4970,2618,749,248,2707,4509,4603,2647,2957,2157,2997,829,2689,3513,3033,5177,3201,5463,369,2779,906,4386,3631,4773,3718,2782,2240,3210,5158,2737,4020,3453,3208,1344,4100,1183,704,3205,2798,3386,1970,4734,3055,2182,990,5189,2419,1860,3998,972,1687,441,2217,2254,4634,2791,2487,98,5358,4433,4023,4328,3953,2461,974,731,869,5382,3699,1748,3629,723,962,600,2736,1413,3146,2955,2386,4834,4467,2814,2822,5137,3101,111,1059,2144,2664,287,4904,1612,4336,1301,3691,1391,717,127,1128,2624,449,2349,2759,1592,369,2359,5064,4392,1137,1682,987,4092,1283,4272,846,4355,1495,1828,2190,1813,4226,3995,2809,1111,3692,5481,1538,509,3008,4781,5259,501,2086,4545,5250,2524,4374,3539,3973,4357,2018,3894,3958,102,3179,5146,823,4168,528,893,1756,113,3042,3235,2954,482,2707,3309,1038,3280,4185,559,4648,4346,192,3214,1263,3062,85,523,141,2822,5218,3192,5426,793,623,2340,3312,2513,5439,4042,5203,4931,2179,626,4858,115,1932,3298,3070,3043,888,918,5227,1828,843,4764,2843,645,4774,1946,3343,3061,5241,4715,4966,1423,3503,5365,3183,1824,624,2389,2860,5025,5102,3,3950,5321,4704,275,1581,3687,3342,4982,2391,2758]
print(mergesort_and_count(lst, 0, len(lst)-1))

#print(bisect_left(lst[:3],20))


