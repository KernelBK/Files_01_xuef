

轮子哥
http://www.cppblog.com/vczh/archive/2008/05/07/49158.html

我之前的正则表达式为了保持很多语法上的一致性（譬如选择操作符“|”需要遵守交换律等等），使用了一种花费很大的办法来对字符串进行分析。
这种分析方法找出所有符合正则表达式要求的所有匹配的路径然后进行筛选。筛选的过程中浪费了很多new和delete的操作，而且做了很多计算，
维护了一个非常复杂的数据结构。后来想到有些事情是可以让人来操心的，于是在原来的接口上加了一个option，添加了一种叫做“贪婪式”的分析方法。
现在就同时有两种分析方法用了。第二种分析方法的优点是快，缺点是丧失了一些语法上的优美（不过这个对于大部分人来说应该是没什么关系的了。
要是正则表达式的执行过程不复杂的话，《精通正则表达式》也就卖不出去了，反正别人的正则表达式大多都是贪婪的）。贪婪式的分析方法不同时扫描
所有路径，而是使用回溯的方法。不过这种方法最大的优点在于数据结构可以大幅度简化为三个堆栈（NFA状态、已捕获子串、捕获状态），从而大量
减少包括申请和释放等的指针操作。
