#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "NET.ASERVE"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|FIND-IT|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|FIND-IT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|FIND-IT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|CH|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|BUFF| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|START| (|COMMON-LISP|::|CADDDR| . #1#))
       (|NET.ASERVE|::|END| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|FIND-IT|
       (|COMMON-LISP|::|LET| ((|NET.ASERVE|::|POS| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|DO|
          ((,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|START|
            (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|POS|)))
          ((|COMMON-LISP|::|>=| ,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|END|))
          (|ACL-COMPAT.EXCL|::|IF*|
           (|COMMON-LISP|::|EQ|
            (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|BUFF| ,|NET.ASERVE|::|POS|)
            ,|NET.ASERVE|::|CH|)
           |NET.ASERVE|::|THEN|
           (|COMMON-LISP|::|RETURN| ,|NET.ASERVE|::|POS|)))))))))
  '(|NET.ASERVE|::|CH| |NET.ASERVE|::|BUFF| |NET.ASERVE|::|START|
    |NET.ASERVE|::|END|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|FIND-IT-REV|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|FIND-IT-REV|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|FIND-IT-REV|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|CH|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|BUFF| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|START| (|COMMON-LISP|::|CADDDR| . #1#))
       (|NET.ASERVE|::|END| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|FIND-IT-REV|
       (|COMMON-LISP|::|LET| ((|NET.ASERVE|::|POS| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|DO|
          ((,|NET.ASERVE|::|POS| (|COMMON-LISP|::|1-| ,|NET.ASERVE|::|END|)
            (|COMMON-LISP|::|1-| ,|NET.ASERVE|::|POS|)))
          ((|COMMON-LISP|::|<| ,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|START|))
          (|ACL-COMPAT.EXCL|::|IF*|
           (|COMMON-LISP|::|EQ|
            (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|BUFF| ,|NET.ASERVE|::|POS|)
            ,|NET.ASERVE|::|CH|)
           |NET.ASERVE|::|THEN|
           (|COMMON-LISP|::|RETURN| ,|NET.ASERVE|::|POS|)))))))))
  '(|NET.ASERVE|::|CH| |NET.ASERVE|::|BUFF| |NET.ASERVE|::|START|
    |NET.ASERVE|::|END|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|BUFFER-SUBSTR|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|BUFFER-SUBSTR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|BUFFER-SUBSTR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|BUFF|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|START| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|END| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|BUFFER-SUBSTR|
       (|COMMON-LISP|::|LET|
        ((|NET.ASERVE|::|RES| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|I| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|POS| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|LET|
          ((,|NET.ASERVE|::|RES|
            (|COMMON-LISP|::|MAKE-STRING|
             (|COMMON-LISP|::|-| ,|NET.ASERVE|::|END|
              ,|NET.ASERVE|::|START|))))
          (|COMMON-LISP|::|DO|
           ((,|NET.ASERVE|::|I| 0. (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|I|))
            (,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|START|
             (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|POS|)))
           ((|COMMON-LISP|::|>=| ,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|END|))
           (|COMMON-LISP|::|SETF|
            (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|RES| ,|NET.ASERVE|::|I|)
            (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|BUFF|
             ,|NET.ASERVE|::|POS|)))
          ,|NET.ASERVE|::|RES|)))))))
  '(|NET.ASERVE|::|BUFF| |NET.ASERVE|::|START| |NET.ASERVE|::|END|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|BUFFER-MATCH|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|BUFFER-MATCH|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|BUFFER-MATCH|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|BUFF|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|START| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|STR| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|BUFFER-MATCH|
       (|COMMON-LISP|::|LET|
        ((|NET.ASERVE|::|POS| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|I| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|LEN| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|DO|
          ((,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|START|
            (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|POS|))
           (,|NET.ASERVE|::|I| 0. (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|I|))
           (,|NET.ASERVE|::|LEN|
            (|COMMON-LISP|::|LENGTH| ,|NET.ASERVE|::|STR|)))
          ((|COMMON-LISP|::|>=| ,|NET.ASERVE|::|I| ,|NET.ASERVE|::|LEN|)
           |COMMON-LISP|::|T|)
          (|ACL-COMPAT.EXCL|::|IF*|
           (|COMMON-LISP|::|NOT|
            (|COMMON-LISP|::|EQ|
             (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|BUFF|
              ,|NET.ASERVE|::|POS|)
             (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|STR| ,|NET.ASERVE|::|I|)))
           |NET.ASERVE|::|THEN|
           (|COMMON-LISP|::|RETURN| |COMMON-LISP|::|NIL|)))))))))
  '(|NET.ASERVE|::|BUFF| |NET.ASERVE|::|START| |NET.ASERVE|::|STR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|BUFFER-MATCH-CI|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|BUFFER-MATCH-CI|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|BUFFER-MATCH-CI|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|BUFF|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|START| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|STR| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|BUFFER-MATCH-CI|
       (|COMMON-LISP|::|LET|
        ((|NET.ASERVE|::|POS| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|I| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|LEN| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|XCHAR| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|DO|
          ((,|NET.ASERVE|::|POS| ,|NET.ASERVE|::|START|
            (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|POS|))
           (,|NET.ASERVE|::|I| 0. (|COMMON-LISP|::|+| 2. ,|NET.ASERVE|::|I|))
           (,|NET.ASERVE|::|LEN|
            (|COMMON-LISP|::|LENGTH| ,|NET.ASERVE|::|STR|)))
          ((|COMMON-LISP|::|>=| ,|NET.ASERVE|::|I| ,|NET.ASERVE|::|LEN|)
           |COMMON-LISP|::|T|)
          (|COMMON-LISP|::|LET|
           ((,|NET.ASERVE|::|XCHAR|
             (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|BUFF|
              ,|NET.ASERVE|::|POS|)))
           (|ACL-COMPAT.EXCL|::|IF*|
            (|COMMON-LISP|::|NOT|
             (|COMMON-LISP|::|OR|
              (|COMMON-LISP|::|EQ| ,|NET.ASERVE|::|XCHAR|
               (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|STR|
                ,|NET.ASERVE|::|I|))
              (|COMMON-LISP|::|EQ| ,|NET.ASERVE|::|XCHAR|
               (|COMMON-LISP|::|SCHAR| ,|NET.ASERVE|::|STR|
                (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|I|)))))
            |NET.ASERVE|::|THEN|
            (|COMMON-LISP|::|RETURN| |COMMON-LISP|::|NIL|))))))))))
  '(|NET.ASERVE|::|BUFF| |NET.ASERVE|::|START| |NET.ASERVE|::|STR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|RATIONAL-READ-SEQUENCE|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|RATIONAL-READ-SEQUENCE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|RATIONAL-READ-SEQUENCE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|NET.ASERVE|::|ARGS| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|RATIONAL-READ-SEQUENCE|
      `(|COMMON-LISP|::|READ-SEQUENCE| ,@|NET.ASERVE|::|ARGS|)))))
  '(|COMMON-LISP|::|&REST| |NET.ASERVE|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|AUSB8|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|AUSB8|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|AUSB8|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|VEC|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|INDEX| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|AUSB8|
       `(|COMMON-LISP|::|AREF|
         (|COMMON-LISP|::|THE|
          (|COMMON-LISP|::|SIMPLE-ARRAY| (|COMMON-LISP|::|UNSIGNED-BYTE| 8.)
           1.)
          ,|NET.ASERVE|::|VEC|)
         ,|NET.ASERVE|::|INDEX|))))))
  '(|NET.ASERVE|::|VEC| |NET.ASERVE|::|INDEX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|COPY-USB8|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|COPY-USB8|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|COPY-USB8|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 6. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|FROM-VECTOR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|FROM-START| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|TO-VECTOR| (|COMMON-LISP|::|CADDDR| . #1#))
       (|NET.ASERVE|::|TO-START| (|COMMON-LISP|::|FIFTH| . #1#))
       (|COMMON-LISP|::|COUNT|
        (|COMMON-LISP|::|CADR| (|COMMON-LISP|::|CDDDDR| . #1#))))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|COPY-USB8|
       (|COMMON-LISP|::|LET|
        ((|NET.ASERVE|::|FROM| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|TO| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|I| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|DO|
          ((,|NET.ASERVE|::|FROM| ,|NET.ASERVE|::|FROM-START|
            (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|FROM|))
           (,|NET.ASERVE|::|TO| ,|NET.ASERVE|::|TO-START|
            (|COMMON-LISP|::|1+| ,|NET.ASERVE|::|TO|))
           (,|NET.ASERVE|::|I| ,|COMMON-LISP|::|COUNT|
            (|COMMON-LISP|::|1-| ,|NET.ASERVE|::|I|)))
          ((|COMMON-LISP|::|<=| ,|NET.ASERVE|::|I| 0.))
          (|COMMON-LISP|::|SETF|
           (|NET.ASERVE|::|AUSB8| ,|NET.ASERVE|::|TO-VECTOR|
            ,|NET.ASERVE|::|TO|)
           (|NET.ASERVE|::|AUSB8| ,|NET.ASERVE|::|FROM-VECTOR|
            ,|NET.ASERVE|::|FROM|)))))))))
  '(|NET.ASERVE|::|FROM-VECTOR| |NET.ASERVE|::|FROM-START|
    |NET.ASERVE|::|TO-VECTOR| |NET.ASERVE|::|TO-START|
    |COMMON-LISP|::|COUNT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|COPY-USB8-UP|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|COPY-USB8-UP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|COPY-USB8-UP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 6. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.ASERVE|::|FROM-VECTOR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.ASERVE|::|FROM-START| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.ASERVE|::|TO-VECTOR| (|COMMON-LISP|::|CADDDR| . #1#))
       (|NET.ASERVE|::|TO-START| (|COMMON-LISP|::|FIFTH| . #1#))
       (|COMMON-LISP|::|COUNT|
        (|COMMON-LISP|::|CADR| (|COMMON-LISP|::|CDDDDR| . #1#))))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|COPY-USB8-UP|
       (|COMMON-LISP|::|LET|
        ((|NET.ASERVE|::|FROM| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|TO| (|COMMON-LISP|::|GENSYM|))
         (|NET.ASERVE|::|I| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|DO*|
          ((,|NET.ASERVE|::|I| ,|COMMON-LISP|::|COUNT|
            (|COMMON-LISP|::|1-| ,|NET.ASERVE|::|I|))
           (,|NET.ASERVE|::|FROM|
            (|COMMON-LISP|::|+| ,|NET.ASERVE|::|FROM-START| ,|NET.ASERVE|::|I|
             -1.)
            (|COMMON-LISP|::|1-| ,|NET.ASERVE|::|FROM|))
           (,|NET.ASERVE|::|TO|
            (|COMMON-LISP|::|+| ,|NET.ASERVE|::|TO-START| ,|NET.ASERVE|::|I|
             -1.)
            (|COMMON-LISP|::|1-| ,|NET.ASERVE|::|TO|)))
          ((|COMMON-LISP|::|<=| ,|NET.ASERVE|::|I| 0.))
          (|COMMON-LISP|::|SETF|
           (|NET.ASERVE|::|AUSB8| ,|NET.ASERVE|::|TO-VECTOR|
            ,|NET.ASERVE|::|TO|)
           (|NET.ASERVE|::|AUSB8| ,|NET.ASERVE|::|FROM-VECTOR|
            ,|NET.ASERVE|::|FROM|)))))))))
  '(|NET.ASERVE|::|FROM-VECTOR| |NET.ASERVE|::|FROM-START|
    |NET.ASERVE|::|TO-VECTOR| |NET.ASERVE|::|TO-START|
    |COMMON-LISP|::|COUNT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|DLOGMESS|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|DLOGMESS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|DLOGMESS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|NET.ASERVE|::|ARGS| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |NET.ASERVE|::|ARGS|))
     (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|DLOGMESS| |COMMON-LISP|::|NIL|))))
  '(|COMMON-LISP|::|&REST| |NET.ASERVE|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.ASERVE|::|WITH-TIMEOUT-LOCAL|)
(|SYSTEM|::|%PUTD| '|NET.ASERVE|::|WITH-TIMEOUT-LOCAL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.ASERVE|::|WITH-TIMEOUT-LOCAL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G27596| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G27597|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 1. 1. |COMMON-LISP|::|T|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|NET.ASERVE|::|WITH-TIMEOUT-LOCAL| #1#
          '#4=(|COMMON-LISP|::|TIME| |COMMON-LISP|::|&REST|
               |NET.ASERVE|::|ACTIONS|))
         #1#))
       (|COMMON-LISP|::|TIME| (|COMMON-LISP|::|CAR| #3#))
       (|NET.ASERVE|::|ACTIONS| (|COMMON-LISP|::|CDR| #3#))
       (|NET.ASERVE|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |NET.ASERVE|::|WITH-TIMEOUT-LOCAL|
       `(|ACL-COMPAT.MP|::|WITH-TIMEOUT|
         (,|COMMON-LISP|::|TIME| ,@|NET.ASERVE|::|ACTIONS|)
         ,@|NET.ASERVE|::|BODY|))))))
  '(#4# |COMMON-LISP|::|&REST| |NET.ASERVE|::|BODY|)))
