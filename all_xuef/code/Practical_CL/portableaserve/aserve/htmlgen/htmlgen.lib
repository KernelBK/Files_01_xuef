#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|%IN-PACKAGE| "NET.HTML.GENERATOR" :|NICKNAMES|
 '|COMMON-LISP|::|NIL| :|USE| '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE|
 |COMMON-LISP|::|NIL| :|CASE-INVERTED| |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP" "ACL-COMPAT.EXCL")
 "NET.HTML.GENERATOR")
(|SYSTEM|::|INTERN-EXPORT|
 '("HTML" "HTML-PRINT" "HTML-PRINT-SUBST" "HTML-PRINT-LIST"
   "HTML-PRINT-LIST-SUBST" "HTML-STREAM" "*HTML-STREAM*")
 "NET.HTML.GENERATOR" |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|FIND-PACKAGE| "NET.HTML.GENERATOR")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "NET.HTML.GENERATOR"))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|WRITE-HTML-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|STRING| |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|STREAM|
    |COMMON-LISP|::|&KEY| (|NET.HTML.GENERATOR|::|START| 0.)
    |NET.HTML.GENERATOR|::|END|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |NET.HTML.GENERATOR|::|*HTML-STREAM*|))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#:|G25094|
    (|COMMON-LISP|::|CONS| '|NET.HTML.GENERATOR|::|HTML-PROCESS|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|)))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES|
   '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
  (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS|
   '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|
   (|COMMON-LISP|::|VECTOR| '|COMMON-LISP|::|LIST| 6. '|COMMON-LISP|::|NIL|
    (|COMMON-LISP|::|LIST|
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|KEY| :|INITARGS| '#1=(:|KEY|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #2='|CLOS|::|INHERITABLE-INITER|
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #3=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|)
      #5='|CLOS|::|LOCATION| '0. #6='|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|HAS-INVERSE| :|INITARGS| '#7=(:|HAS-INVERSE|)
      :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #8=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '1. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|MACRO| :|INITARGS| '#9=(:|MACRO|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #10=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '2. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|COMMON-LISP|::|SPECIAL| :|INITARGS| '#11=(:|SPECIAL|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #12=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '3. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|COMMON-LISP|::|PRINT| :|INITARGS| '#13=(:|PRINT|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #14=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '4. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|NAME-ATTR| :|INITARGS| '#15=(:|NAME-ATTR|)
      :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #16=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '5. #6# '|COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|LIST|
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|KEY| :|INITARGS| '#1# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #17='|CLOS|::|INHERITABLE-INITER|
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #3#)
      #18='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|HAS-INVERSE| :|INITARGS| '#7# :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #17#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #8#)
      #18# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|) :|WRITERS|
      '((|COMMON-LISP|::|SETF|
         |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|MACRO| :|INITARGS| '#9# :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #17#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #10#)
      #18# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|COMMON-LISP|::|SPECIAL| :|INITARGS| '#11# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #17#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #12#)
      #18# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|COMMON-LISP|::|PRINT| :|INITARGS| '#13# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #17#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #14#)
      #18# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|NET.HTML.GENERATOR|::|NAME-ATTR| :|INITARGS| '#15# :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #17#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #16#)
      #18# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|) :|WRITERS|
      '((|COMMON-LISP|::|SETF|
         |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|))))
    '(|NET.HTML.GENERATOR|::|MAKE-HTML-PROCESS|)
    '|NET.HTML.GENERATOR|::|COPY-HTML-PROCESS| '|COMMON-LISP|::|NIL|))
  (|CLOS|::|UNDEFINE-STRUCTURE-CLASS| '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
  (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|MAKE-HTML-PROCESS|
   (|NET.HTML.GENERATOR|::|KEY| |NET.HTML.GENERATOR|::|HAS-INVERSE|
    |NET.HTML.GENERATOR|::|MACRO| |COMMON-LISP|::|SPECIAL|
    |COMMON-LISP|::|PRINT| |NET.HTML.GENERATOR|::|NAME-ATTR|
    |COMMON-LISP|::|&AUX|)
   (|COMMON-LISP|::|LIST|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|KEY|)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     |NET.HTML.GENERATOR|::|HAS-INVERSE|)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|MACRO|)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| |COMMON-LISP|::|SPECIAL|)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| |COMMON-LISP|::|PRINT|)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     |NET.HTML.GENERATOR|::|NAME-ATTR|))))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|COPY-HTML-PROCESS|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|COPY-HTML-PROCESS|
  (|COMMON-LISP|::|STRUCTURE|)
  (|COMMON-LISP|::|COPY-LIST| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
    (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
  #19=(|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|NTH| 0. . #20=(|SYSTEM|::|OBJECT|))))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
  #21='|SYSTEM|::|DEFSTRUCT-READER| '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|
    (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE| #19#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| (|COMMON-LISP|::|NTH| 1. . #20#)))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE| #21#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|
    (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO| #19#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| (|COMMON-LISP|::|NTH| 2. . #20#)))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO| #21#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|
    (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL| #19#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| (|COMMON-LISP|::|NTH| 3. . #20#)))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL| #21#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|
    (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT| #19#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| (|COMMON-LISP|::|NTH| 4. . #20#)))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT| #21#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|
    (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|))
 (|COMMON-LISP|::|DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR| #19#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| (|COMMON-LISP|::|NTH| 5. . #20#)))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR| #21#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)
    (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)
  #22=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 0. . #23=(|SYSTEM|::|OBJECT|)) .
   #24=(|SYSTEM|::|VALUE|)))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
  #25='|SYSTEM|::|DEFSTRUCT-WRITER| '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|)
    (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|) #22#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 1. . #23#) . #24#))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE| #25#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|)
    (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|) #22#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 2. . #23#) . #24#))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO| #25#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|)
    (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|) #22#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 3. . #23#) . #24#))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL| #25#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|)
    (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|) #22#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 4. . #23#) . #24#))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT| #25#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|)
    (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|) #22#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 5. . #23#) . #24#))
 (|SYSTEM|::|%PUT| '|NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR| #25#
  '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|NET.HTML.GENERATOR|::|HTML-PROCESS|
  '|COMMON-LISP|::|TYPE| |COMMON-LISP|::|NIL|)
 '|NET.HTML.GENERATOR|::|HTML-PROCESS|)
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|MAKE-HTML-PROCESS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|KEY| |NET.HTML.GENERATOR|::|HAS-INVERSE|
    |NET.HTML.GENERATOR|::|MACRO| |COMMON-LISP|::|SPECIAL|
    |COMMON-LISP|::|PRINT| |NET.HTML.GENERATOR|::|NAME-ATTR|
    |COMMON-LISP|::|&AUX|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|COPY-HTML-PROCESS|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|COPY-HTML-PROCESS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|COMMON-LISP|::|STRUCTURE|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|COPY-HTML-PROCESS|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|COPY-HTML-PROCESS|
    (|COMMON-LISP|::|COPY-LIST| |COMMON-LISP|::|STRUCTURE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
   (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|NTH| 0. |SYSTEM|::|OBJECT|)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|
   (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|NTH| 1. |SYSTEM|::|OBJECT|)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|
   (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|NTH| 2. |SYSTEM|::|OBJECT|)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|
   (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|NTH| 3. |SYSTEM|::|OBJECT|)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|
   (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|NTH| 4. |SYSTEM|::|OBJECT|)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|
   (|NET.HTML.GENERATOR|::|HTML-PROCESS|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|NTH| 5. |SYSTEM|::|OBJECT|)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)
   (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-KEY|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 0. |SYSTEM|::|OBJECT|)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|)
   (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-HAS-INVERSE|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 1. |SYSTEM|::|OBJECT|)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|)
   (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-MACRO|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 2. |SYSTEM|::|OBJECT|)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|)
   (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-SPECIAL|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 3. |SYSTEM|::|OBJECT|)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|)
   (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-PRINT|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 4. |SYSTEM|::|OBJECT|)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|)
   (|COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|HTML-PROCESS|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-PROCESS-NAME-ATTR|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 5. |SYSTEM|::|OBJECT|)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |NET.HTML.GENERATOR|::|*HTML-PROCESS-TABLE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |NET.HTML.GENERATOR|::|*HTML-STREAM*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|HTML|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|HTML|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML|
   (|COMMON-LISP|::|LAMBDA|
    (|SYSTEM|::|<MACRO-FORM>| |NET.HTML.GENERATOR|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|LET*|
     ((|NET.HTML.GENERATOR|::|FORMS|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML|
      (|NET.HTML.GENERATOR|::|PROCESS-HTML-FORMS| |NET.HTML.GENERATOR|::|FORMS|
       |NET.HTML.GENERATOR|::|ENV|)))))
  '(|COMMON-LISP|::|&REST| |NET.HTML.GENERATOR|::|FORMS|
    |COMMON-LISP|::|&ENVIRONMENT| |NET.HTML.GENERATOR|::|ENV|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|HTML-OUT-STREAM-CHECK|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|HTML-OUT-STREAM-CHECK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-OUT-STREAM-CHECK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-OUT-STREAM-CHECK|
       `(|COMMON-LISP|::|LET|
         ((|NET.HTML.GENERATOR|::|.STR.| ,|COMMON-LISP|::|STREAM|))
         (|ACL-COMPAT.EXCL|::|IF*|
          (|COMMON-LISP|::|NOT|
           (|COMMON-LISP|::|STREAMP| |NET.HTML.GENERATOR|::|.STR.|))
          |NET.HTML.GENERATOR|::|THEN|
          (|COMMON-LISP|::|ERROR|
           "html-stream must be passed a stream object, not ~s"
           |NET.HTML.GENERATOR|::|.STR.|))
         |NET.HTML.GENERATOR|::|.STR.|))))))
  '(|COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|HTML-STREAM|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|HTML-STREAM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|HTML-STREAM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|FORMS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|HTML-STREAM|
       `(|COMMON-LISP|::|LET|
         ((|NET.HTML.GENERATOR|::|*HTML-STREAM*|
           (|NET.HTML.GENERATOR|::|HTML-OUT-STREAM-CHECK|
            ,|COMMON-LISP|::|STREAM|)))
         (|NET.HTML.GENERATOR|::|HTML| ,@|NET.HTML.GENERATOR|::|FORMS|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|FORMS|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|PROCESS-HTML-FORMS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|FORMS| |NET.HTML.GENERATOR|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-ATOM-CHECK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|OPEN| |COMMON-LISP|::|CLOSE|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-BODY-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|OPEN| |COMMON-LISP|::|CLOSE|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|STRING-CODE| |NET.HTML.GENERATOR|::|HAS-INV|
    |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|PRINC-HTTP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|NET.HTML.GENERATOR|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|PRIN1-HTTP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|NET.HTML.GENERATOR|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|PRINC-SAFE-HTTP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|NET.HTML.GENERATOR|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|PRIN1-SAFE-HTTP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|NET.HTML.GENERATOR|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|PRIN1-SAFE-HTTP-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|NET.HTML.GENERATOR|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|EMIT-SAFE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PRINT-LIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|LIST-OF-FORMS| |COMMON-LISP|::|STREAM|
    |COMMON-LISP|::|&KEY| |NET.HTML.GENERATOR|::|UNKNOWN|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PRINT-LIST-SUBST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|LIST-OF-FORMS| |COMMON-LISP|::|SUBST|
    |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&KEY|
    |NET.HTML.GENERATOR|::|UNKNOWN|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|FORM| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&KEY|
    |NET.HTML.GENERATOR|::|UNKNOWN|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-PRINT-SUBST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|FORM| |COMMON-LISP|::|SUBST| |COMMON-LISP|::|STREAM|
    |NET.HTML.GENERATOR|::|UNKNOWN|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-FIND-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|KEY| |COMMON-LISP|::|SUBST|)))
(|SYSTEM|::|C-DEFUN| '|NET.HTML.GENERATOR|::|HTML-STANDARD-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|NET.HTML.GENERATOR|::|ENT| |NET.HTML.GENERATOR|::|CMD|
    |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|FORM|
    |COMMON-LISP|::|SUBST| |NET.HTML.GENERATOR|::|UNKNOWN|
    |COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|DEF-SPECIAL-HTML|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|DEF-SPECIAL-HTML|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|DEF-SPECIAL-HTML|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|KWD|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|FCN| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.HTML.GENERATOR|::|PRINT-FCN| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|DEF-SPECIAL-HTML|
       `(|COMMON-LISP|::|SETF|
         (|COMMON-LISP|::|GETHASH| ,|NET.HTML.GENERATOR|::|KWD|
          |NET.HTML.GENERATOR|::|*HTML-PROCESS-TABLE*|)
         (|NET.HTML.GENERATOR|::|MAKE-HTML-PROCESS|
          ,|NET.HTML.GENERATOR|::|KWD| |COMMON-LISP|::|NIL|
          |COMMON-LISP|::|NIL| ,|NET.HTML.GENERATOR|::|FCN|
          ,|NET.HTML.GENERATOR|::|PRINT-FCN| |COMMON-LISP|::|NIL|)))))))
  '(|NET.HTML.GENERATOR|::|KWD| |NET.HTML.GENERATOR|::|FCN|
    |NET.HTML.GENERATOR|::|PRINT-FCN|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|DEF-STD-HTML|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|DEF-STD-HTML|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|DEF-STD-HTML|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|KWD|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|HAS-INVERSE| (|COMMON-LISP|::|CADDR| . #1#))
       (|NET.HTML.GENERATOR|::|NAME-ATTRS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|DEF-STD-HTML|
       (|COMMON-LISP|::|LET|
        ((|NET.HTML.GENERATOR|::|MAC-NAME|
          (|COMMON-LISP|::|INTERN|
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~a-~a" :|WITH-HTML|
            |NET.HTML.GENERATOR|::|KWD|)))
         (|NET.HTML.GENERATOR|::|STRING-CODE|
          (|COMMON-LISP|::|STRING-DOWNCASE|
           (|COMMON-LISP|::|STRING| |NET.HTML.GENERATOR|::|KWD|))))
        `(|COMMON-LISP|::|PROGN|
          (|COMMON-LISP|::|SETF|
           (|COMMON-LISP|::|GETHASH| ,|NET.HTML.GENERATOR|::|KWD|
            |NET.HTML.GENERATOR|::|*HTML-PROCESS-TABLE*|)
           (|NET.HTML.GENERATOR|::|MAKE-HTML-PROCESS|
            ,|NET.HTML.GENERATOR|::|KWD| ,|NET.HTML.GENERATOR|::|HAS-INVERSE|
            ',|NET.HTML.GENERATOR|::|MAC-NAME| |COMMON-LISP|::|NIL|
            #'|NET.HTML.GENERATOR|::|HTML-STANDARD-PRINT|
            ',|NET.HTML.GENERATOR|::|NAME-ATTRS|))
          (|COMMON-LISP|::|DEFMACRO| ,|NET.HTML.GENERATOR|::|MAC-NAME|
           (|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
            |NET.HTML.GENERATOR|::|BODY|)
           (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM|
            ,|NET.HTML.GENERATOR|::|STRING-CODE|
            ,|NET.HTML.GENERATOR|::|HAS-INVERSE| |NET.HTML.GENERATOR|::|ARGS|
            |NET.HTML.GENERATOR|::|BODY|)))))))))
  '(|NET.HTML.GENERATOR|::|KWD| |NET.HTML.GENERATOR|::|HAS-INVERSE|
    |NET.HTML.GENERATOR|::|NAME-ATTRS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-A|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-A|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-A|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-A|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "a" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-ABBR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-ABBR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-ABBR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-ABBR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "abbr" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-ACRONYM|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-ACRONYM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-ACRONYM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-ACRONYM|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "acronym" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-ADDRESS|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-ADDRESS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-ADDRESS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-ADDRESS|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "address" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-APPLET|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-APPLET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-APPLET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-APPLET|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "applet" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-AREA|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-AREA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-AREA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-AREA|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "area" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-B|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-B|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-B|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-B|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "b" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BASE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BASE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "base" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-BASEFONT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BASEFONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BASEFONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BASEFONT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "basefont"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BDO|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BDO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BDO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BDO|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "bdo" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BGSOUND|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BGSOUND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BGSOUND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BGSOUND|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "bgsound"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BIG|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BIG|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BIG|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BIG|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "big" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BLINK|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BLINK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BLINK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BLINK|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "blink" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-BLOCKQUOTE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BLOCKQUOTE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BLOCKQUOTE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BLOCKQUOTE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "blockquote"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BODY|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BODY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BODY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BODY|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "body" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "br" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-BUTTON|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-BUTTON|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-BUTTON|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-BUTTON|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "button"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-CAPTION|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-CAPTION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-CAPTION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-CAPTION|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "caption" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-CENTER|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-CENTER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-CENTER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-CENTER|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "center" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-CITE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-CITE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-CITE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-CITE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "cite" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-CODE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-CODE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-CODE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-CODE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "code" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-COL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-COL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-COL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-COL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "col" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-COLGROUP|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-COLGROUP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-COLGROUP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-COLGROUP|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "colgroup"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DD|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DD|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "dd" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DEL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DEL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DEL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DEL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "del" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DFN|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DFN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DFN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DFN|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "dfn" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DIR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DIR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DIR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DIR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "dir" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DIV|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DIV|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DIV|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DIV|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "div" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "dl" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-DT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-DT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-DT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-DT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "dt" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-EM|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-EM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-EM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-EM|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "em" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-EMBED|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-EMBED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-EMBED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-EMBED|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "embed" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-FIELDSET|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-FIELDSET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-FIELDSET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-FIELDSET|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "fieldset"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-FONT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-FONT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "font" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-FORM|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-FORM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-FORM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-FORM|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "form" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-FRAME|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-FRAME|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-FRAME|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-FRAME|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "frame" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-FRAMESET|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-FRAMESET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-FRAMESET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-FRAMESET|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "frameset"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-H1|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-H1|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-H1|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-H1|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "h1" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-H2|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-H2|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-H2|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-H2|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "h2" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-H3|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-H3|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-H3|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-H3|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "h3" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-H4|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-H4|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-H4|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-H4|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "h4" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-H5|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-H5|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-H5|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-H5|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "h5" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-H6|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-H6|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-H6|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-H6|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "h6" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-HEAD|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-HEAD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-HEAD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-HEAD|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "head" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-HR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-HR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-HR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-HR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "hr" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-HTML|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-HTML|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-HTML|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-HTML|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "html" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-I|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-I|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-I|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-I|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "i" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-IFRAME|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-IFRAME|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-IFRAME|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-IFRAME|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "iframe" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-ILAYER|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-ILAYER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-ILAYER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-ILAYER|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "ilayer" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-IMG|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-IMG|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-IMG|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-IMG|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "img" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-INPUT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-INPUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-INPUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-INPUT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "input" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-INS|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-INS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-INS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-INS|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "ins" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-ISINDEX|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-ISINDEX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-ISINDEX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-ISINDEX|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "isindex"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-KBD|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-KBD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-KBD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-KBD|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "kbd" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-KEYGEN|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-KEYGEN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-KEYGEN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-KEYGEN|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "keygen"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-LABEL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-LABEL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-LABEL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-LABEL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "label" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-LAYER|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-LAYER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-LAYER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-LAYER|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "layer" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-LEGEND|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-LEGEND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-LEGEND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-LEGEND|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "legend" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-LI|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-LI|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-LI|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-LI|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "li" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-LINK|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-LINK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-LINK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-LINK|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "link" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-LISTING|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-LISTING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-LISTING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-LISTING|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "listing" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-MAP|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-MAP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-MAP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-MAP|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "map" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-MARQUEE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-MARQUEE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-MARQUEE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-MARQUEE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "marquee" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-MENU|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-MENU|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-MENU|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-MENU|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "menu" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-META|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-META|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-META|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-META|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "meta" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-MULTICOL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-MULTICOL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-MULTICOL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-MULTICOL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "multicol"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-NOBR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-NOBR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-NOBR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-NOBR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "nobr" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-NOEMBED|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-NOEMBED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-NOEMBED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-NOEMBED|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "noembed" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-NOFRAMES|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-NOFRAMES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-NOFRAMES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-NOFRAMES|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "noframes"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-NOSCRIPT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-NOSCRIPT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-NOSCRIPT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-NOSCRIPT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "noscript"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-OBJECT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-OBJECT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-OBJECT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-OBJECT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "object" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-OL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-OL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-OL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-OL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "ol" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-OPTGROUP|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-OPTGROUP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-OPTGROUP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-OPTGROUP|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "optgroup"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-OPTION|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-OPTION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-OPTION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-OPTION|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "option" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-P|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-P|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "p" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-PARAM|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-PARAM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-PARAM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-PARAM|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "param" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-PLAINTEXT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-PLAINTEXT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-PLAINTEXT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-PLAINTEXT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "plaintext"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-PRE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-PRE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-PRE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-PRE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "pre" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-Q|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-Q|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-Q|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-Q|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "q" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-S|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-S|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-S|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-S|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "s" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SAMP|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SAMP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SAMP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SAMP|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "samp" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SCRIPT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SCRIPT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SCRIPT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SCRIPT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "script" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SELECT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SELECT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SELECT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SELECT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "select" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SERVER|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SERVER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SERVER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SERVER|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "server" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SMALL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SMALL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SMALL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SMALL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "small" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SPACER|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SPACER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SPACER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SPACER|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "spacer"
        |COMMON-LISP|::|NIL| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SPAN|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SPAN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SPAN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SPAN|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "span" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-STRIKE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-STRIKE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-STRIKE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-STRIKE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "strike" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-STRONG|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-STRONG|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-STRONG|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-STRONG|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "strong" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-STYLE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-STYLE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-STYLE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-STYLE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "style" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SUB|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SUB|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SUB|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SUB|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "sub" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-SUP|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-SUP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-SUP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-SUP|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "sup" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TABLE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TABLE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TABLE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TABLE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "table" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TBODY|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TBODY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TBODY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TBODY|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "tbody" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TD|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TD|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "td" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|NET.HTML.GENERATOR|::|WITH-HTML-TEXTAREA|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TEXTAREA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TEXTAREA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TEXTAREA|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "textarea"
        |COMMON-LISP|::|T| |NET.HTML.GENERATOR|::|ARGS|
        |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TFOOT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TFOOT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TFOOT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TFOOT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "tfoot" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TH|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TH|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TH|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TH|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "th" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-THEAD|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-THEAD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-THEAD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-THEAD|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "thead" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TITLE|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TITLE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TITLE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TITLE|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "title" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "tr" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-TT|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-TT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-TT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-TT|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "tt" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-U|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-U|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-U|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-U|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "u" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-UL|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-UL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-UL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-UL|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "ul" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-VAR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-VAR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-VAR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-VAR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "var" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-WBR|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-WBR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-WBR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-WBR|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "wbr" |COMMON-LISP|::|NIL|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|NET.HTML.GENERATOR|::|WITH-HTML-XMP|)
(|SYSTEM|::|%PUTD| '|NET.HTML.GENERATOR|::|WITH-HTML-XMP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |NET.HTML.GENERATOR|::|WITH-HTML-XMP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|NET.HTML.GENERATOR|::|ARGS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|NET.HTML.GENERATOR|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |NET.HTML.GENERATOR|::|WITH-HTML-XMP|
       (|NET.HTML.GENERATOR|::|HTML-BODY-KEY-FORM| "xmp" |COMMON-LISP|::|T|
        |NET.HTML.GENERATOR|::|ARGS| |NET.HTML.GENERATOR|::|BODY|))))))
  '(|NET.HTML.GENERATOR|::|ARGS| |COMMON-LISP|::|&REST|
    |NET.HTML.GENERATOR|::|BODY|)))
