#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "ACL-COMPAT-MP"))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |ACL-COMPAT.MP|::|*CURRENT-PROCESS*|))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-ALLOW-SCHEDULE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-ALLOW-SCHEDULING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-PLIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|ACL-COMPAT.MP|::|PROCESS|)))
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |ACL-COMPAT.MP|::|PROCESS-PLIST|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|ACL-COMPAT.MP|::|NEW-VALUE| |ACL-COMPAT.MP|::|PROCESS|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-RUN-REASONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|ACL-COMPAT.MP|::|PROCESS|)))
(|SYSTEM|::|C-DEFUN|
 '(|COMMON-LISP|::|SETF| |ACL-COMPAT.MP|::|PROCESS-RUN-REASONS|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|ACL-COMPAT.MP|::|NEW-VALUE| |ACL-COMPAT.MP|::|PROCESS|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-REVOKE-RUN-REASON|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|ACL-COMPAT.MP|::|PROCESS| |ACL-COMPAT.MP|::|OBJECT|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-ADD-RUN-REASON|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|ACL-COMPAT.MP|::|PROCESS| |ACL-COMPAT.MP|::|OBJECT|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-RUN-FUNCTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|ACL-COMPAT.MP|::|NAME| |COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|&REST|
    |ACL-COMPAT.MP|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|PROCESS-KILL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|ACL-COMPAT.MP|::|PROCESS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|ACL-COMPAT.MP|::|WITH-GENSYMS|)
(|SYSTEM|::|%PUTD| '|ACL-COMPAT.MP|::|WITH-GENSYMS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |ACL-COMPAT.MP|::|WITH-GENSYMS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Bind symbols to gensyms.  First sym is a string - `gensym' prefix.\n
Inspired by Paul Graham, <On Lisp>, p. 145."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|ACL-COMPAT.MP|::|SYMS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|ACL-COMPAT.MP|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |ACL-COMPAT.MP|::|WITH-GENSYMS|
       `(|COMMON-LISP|::|LET|
         (,@(|COMMON-LISP|::|MAPCAR|
             (|COMMON-LISP|::|LAMBDA| (|ACL-COMPAT.MP|::|SY|)
              `(,|ACL-COMPAT.MP|::|SY|
                (|COMMON-LISP|::|GENSYM|
                 ,(|COMMON-LISP|::|CAR| |ACL-COMPAT.MP|::|SYMS|))))
             (|COMMON-LISP|::|CDR| |ACL-COMPAT.MP|::|SYMS|)))
         ,@|ACL-COMPAT.MP|::|BODY|))))))
  '(|ACL-COMPAT.MP|::|SYMS| |COMMON-LISP|::|&BODY| |ACL-COMPAT.MP|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|INTERRUPT-PROCESS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|ACL-COMPAT.MP|::|PROCESS| |COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|&REST|
    |ACL-COMPAT.MP|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|ACL-COMPAT.MP|::|MAKE-PROCESS-LOCK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| |ACL-COMPAT.MP|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|ACL-COMPAT.MP|::|WITH-PROCESS-LOCK|)
(|SYSTEM|::|%PUTD| '|ACL-COMPAT.MP|::|WITH-PROCESS-LOCK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |ACL-COMPAT.MP|::|WITH-PROCESS-LOCK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G24409| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G24410|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 1. 1. |COMMON-LISP|::|T|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|ACL-COMPAT.MP|::|WITH-PROCESS-LOCK| #1#
          '#4=(|ACL-COMPAT.MP|::|LOCK| |COMMON-LISP|::|&KEY|
               |ACL-COMPAT.MP|::|NORECURSIVE| |ACL-COMPAT.MP|::|WHOSTATE|
               |ACL-COMPAT.MP|::|TIMEOUT|))
         #1#))
       (|ACL-COMPAT.MP|::|LOCK| (|COMMON-LISP|::|CAR| #3#))
       (#5=#:|G24411| (|COMMON-LISP|::|CDR| #3#))
       (|ACL-COMPAT.MP|::|NORECURSIVE|
        (|COMMON-LISP|::|GETF| #5# ':|NORECURSIVE| .
         #6=(|COMMON-LISP|::|NIL|)))
       (|ACL-COMPAT.MP|::|WHOSTATE|
        (|COMMON-LISP|::|GETF| #5# ':|WHOSTATE| . #6#))
       (|ACL-COMPAT.MP|::|TIMEOUT|
        (|COMMON-LISP|::|GETF| #5# ':|TIMEOUT| . #6#))
       (|ACL-COMPAT.MP|::|FORMS| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |ACL-COMPAT.MP|::|LOCK|
        |ACL-COMPAT.MP|::|NORECURSIVE| |ACL-COMPAT.MP|::|WHOSTATE|
        |ACL-COMPAT.MP|::|TIMEOUT|))
      (|SYSTEM|::|KEYWORD-TEST| #5# '(:|TIMEOUT| :|WHOSTATE| :|NORECURSIVE|))
      (|COMMON-LISP|::|BLOCK| |ACL-COMPAT.MP|::|WITH-PROCESS-LOCK|
       `(|COMMON-LISP|::|PROGN| ,@|ACL-COMPAT.MP|::|FORMS|))))))
  '(#4# |COMMON-LISP|::|&BODY| |ACL-COMPAT.MP|::|FORMS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|ACL-COMPAT.MP|::|WITH-TIMEOUT|)
(|SYSTEM|::|%PUTD| '|ACL-COMPAT.MP|::|WITH-TIMEOUT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |ACL-COMPAT.MP|::|WITH-TIMEOUT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G24424| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G24425|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| #1# 1. 1. |COMMON-LISP|::|T|))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|ACL-COMPAT.MP|::|WITH-TIMEOUT| #1#
          '#4=(|ACL-COMPAT.MP|::|SECONDS| |COMMON-LISP|::|&BODY|
               |ACL-COMPAT.MP|::|TIMEOUT-FORMS|))
         #1#))
       (|ACL-COMPAT.MP|::|SECONDS| (|COMMON-LISP|::|CAR| #3#))
       (|ACL-COMPAT.MP|::|TIMEOUT-FORMS| (|COMMON-LISP|::|CDR| #3#))
       (|ACL-COMPAT.MP|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |ACL-COMPAT.MP|::|SECONDS|
        |ACL-COMPAT.MP|::|TIMEOUT-FORMS|))
      (|COMMON-LISP|::|BLOCK| |ACL-COMPAT.MP|::|WITH-TIMEOUT|
       `(|COMMON-LISP|::|PROGN| ,@|ACL-COMPAT.MP|::|BODY|))))))
  '(#4# |COMMON-LISP|::|&BODY| |ACL-COMPAT.MP|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|ACL-COMPAT.MP|::|WITHOUT-SCHEDULING|)
(|SYSTEM|::|%PUTD| '|ACL-COMPAT.MP|::|WITHOUT-SCHEDULING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |ACL-COMPAT.MP|::|WITHOUT-SCHEDULING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|ACL-COMPAT.MP|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |ACL-COMPAT.MP|::|WITHOUT-SCHEDULING|
      `(|COMMON-LISP|::|PROGN| ,@|ACL-COMPAT.MP|::|BODY|)))))
  '(|COMMON-LISP|::|&BODY| |ACL-COMPAT.MP|::|BODY|)))
