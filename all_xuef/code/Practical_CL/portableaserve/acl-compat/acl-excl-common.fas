(|SYSTEM|::|VERSION| '(20080430.))
#0Y_ #0Y |CHARSET|::|UTF-8|
#Y(#:|1 41 (IN-PACKAGE :ACL-COMPAT.EXCL)-1|
   #17Y(00 00 00 00 00 00 00 00 20 01 DA 31 F6 0F 01 19 01)
   ("ACL-COMPAT.EXCL" |COMMON-LISP|::|*PACKAGE*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|43 43 (DEFVAR IF*-KEYWORD-LIST '("then" "thenret" "else" ...))-2|
   #24Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB DC 31 5A C6 19
        01)
   ((|COMMON-LISP|::|SPECIAL| |ACL-COMPAT.EXCL|::|IF*-KEYWORD-LIST|)
    |ACL-COMPAT.EXCL|::|IF*-KEYWORD-LIST| ("then" "thenret" "else" "elseif"))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|45 94 (DEFMACRO IF* (&REST ARGS) ...)-3|
   #23Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC DD 72 4C 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|IF*| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|IF*|
       #192Y(00 00 00 00 02 00 00 00 26 03 95 02 AC 72 63 DA 01 04 93 05 80 9B
             94 05 8F 18 11 94 05 72 A6 6B 01 DC 38 02 8D C1 05 94 05 81 A6 01
             B0 24 00 80 43 B0 25 06 80 62 93 01 80 41 14 E1 38 04 8C 41 21 AD
             E3 38 04 8C 41 28 CF 14 9F 1B 80 69 CA 1B 78 14 DD 38 04 8D 41 76
             7D 00 C9 FC 1B 80 4A CD 1B 32 92 03 7A 7E 03 C5 FC 64 9E 7A 84 02
             1B 39 C9 FC 1B 35 92 01 5A CB FC 7D 00 94 05 84 00 1B 28 E5 A3 5B
             1B 31 92 01 78 D1 FC 94 05 9E 7A 84 02 1B 16 D3 14 33 00 1E B0 24
             04 6A B0 25 0C 09 AD E7 38 04 8D 41 6C C5 FC 83 05 7D 01 92 05 FF
             65 B0 24 0C 06 EA A4 14 33 01 1E E9 A0 5D 19 0A)
       (:|INIT| |ACL-COMPAT.EXCL|::|IF*-KEYWORD-LIST|
        #.#'|COMMON-LISP|::|STRING-EQUAL| "thenret" :|THEN|
        "if*: bad keyword ~a" :|COL| "else" "if*: multiples elses" "then"
        "if*: bad keyword ~s" "if*: keyword ~s at the wrong place " :|COMPL|
        "elseif" "if*: missing elseif clause " |COMMON-LISP|::|COND|
        "if*: illegal form ~s")
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|) |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|&REST| |ACL-COMPAT.EXCL|::|ARGS|))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|96 96 (DEFVAR *INITIAL-TERMINAL-IO* *TERMINAL-IO*)-4|
   #25Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 05 DB 6B 02 31 5A C6 19
        01)
   ((|COMMON-LISP|::|SPECIAL| |ACL-COMPAT.EXCL|::|*INITIAL-TERMINAL-IO*|)
    |ACL-COMPAT.EXCL|::|*INITIAL-TERMINAL-IO*| |COMMON-LISP|::|*TERMINAL-IO*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|97 97 (DEFVAR *CL-DEFAULT-SPECIAL-BINDINGS* NIL)-5|
   #24Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB 63 31 5A C6 19
        01)
   ((|COMMON-LISP|::|SPECIAL|
     |ACL-COMPAT.EXCL|::|*CL-DEFAULT-SPECIAL-BINDINGS*|)
    |ACL-COMPAT.EXCL|::|*CL-DEFAULT-SPECIAL-BINDINGS*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|99 100 (DEFUN FILESYS-SIZE (STREAM) ...)-6|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|FILESYS-SIZE| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|FILESYS-SIZE|
       #15Y(00 00 00 00 01 00 00 00 26 02 AD 32 9B 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|STREAM|) |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|102 103 (DEFUN FILESYS-WRITE-DATE (STREAM) ...)-7|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|FILESYS-WRITE-DATE| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|FILESYS-WRITE-DATE|
       #15Y(00 00 00 00 01 00 00 00 26 02 AD 32 10 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|STREAM|) |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|105 118 (DEFUN FROB-REGEXP (REGEXP) ...)-8|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|FROB-REGEXP| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|FROB-REGEXP|
       #104Y(05 00 02 00 01 00 00 00 26 02 AD 38 02 72 8D 53 80 4D DA 38 01 72
             8F 53 3A 63 1B 29 B2 38 03 80 83 00 1B 1D AC DB 91 01 07 0C 63 B3
             01 03 71 85 DC 38 03 8C C1 66 AC DC 38 03 8D C1 04 DB B0 31 90 AC
             B0 31 90 B2 01 03 80 83 00 1C 57 16 01 AE 32 90 54 67 00 00 00 38
             01 32 97 55 16 01 54 67 00 00 00 2F 03 55 19 03)
       (|COMMON-LISP|::|CHARACTER| #\\ (#\) #\( #\|) |COMMON-LISP|::|CLOSE|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|ACL-COMPAT.EXCL|::|REGEXP|)
       "This converts from ACL regexps to Perl regexps.  The escape\n
  status of (, ) and | is toggled."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|120 149 (DEFUN MATCH-REGEXP (STRING-OR-REGEXP STRING-TO-MATCH &KEY ...) ...)-9|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|MATCH-REGEXP| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|MATCH-REGEXP|
       #145Y(00 00 00 00 02 00 00 00 A6 1D 06 00 00 00 3D 06 3D 05 3D 04 3B 03
             02 CB FB 3D 02 3B 01 09 7D 01 93 01 07 E1 33 00 1E 92 01 79 92 02
             04 B3 81 62 02 B4 6F 08 E3 B3 E4 B6 6E 05 0B A2 26 0C 80 46 AC B5
             DD B3 DE B4 2D 06 0D 42 02 9E 1F 0A E8 64 AF AF E9 32 3B 9B 02 0C
             19 0C AC B5 DD B3 DE B4 2D 06 10 42 04 A0 1F 0F E8 64 B1 A2 7A E9
             EB B2 B2 33 01 27 9B 02 0E 19 0E AC B5 DD B3 DE B4 2D 06 10 59 59
             19 0A B1 EC ED 70 14 EF 2D 03 16 19 0A)
       (:|NEWLINES-SPECIAL| :|CASE-FOLD| :|RETURN| :|START| :|END| :|SHORTEST|
        0. "match-regexp: shortest option not supported yet."
        |ACL-COMPAT.EXCL|::|FROB-REGEXP| :|CASE-INSENSITIVE-MODE|
        :|SINGLE-LINE-MODE| |CL-PPCRE|::|CREATE-SCANNER|
        #S(|COMMON-LISP|::|HASH-TABLE| :|TEST| |EXT|::|STABLEHASH-EQ|
           (|COMMON-LISP|::|NIL| . 59.) (:|INDEX| . 28.) (:|STRING| . 2.))
        |CL-PPCRE|::|SCAN-TO-STRINGS| #.#'|COMMON-LISP|::|VALUES|
        |COMMON-LISP|::|LIST| |CL-PPCRE|::|SCAN| #.#'|COMMON-LISP|::|CONS|
        |COMMON-LISP|::|RETURN| (:|STRING| :|INDEX| |COMMON-LISP|::|NIL|)
        |SYSTEM|::|CASE-ERROR-STRING|
        (|COMMON-LISP|::|MEMBER| :|STRING| :|INDEX| |COMMON-LISP|::|NIL|)
        |SYSTEM|::|ETYPECASE-FAILED|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|ACL-COMPAT.EXCL|::|STRING-OR-REGEXP|
        |ACL-COMPAT.EXCL|::|STRING-TO-MATCH| |COMMON-LISP|::|&KEY|
        |ACL-COMPAT.EXCL|::|NEWLINES-SPECIAL| |ACL-COMPAT.EXCL|::|CASE-FOLD|
        |COMMON-LISP|::|RETURN| (|ACL-COMPAT.EXCL|::|START| 0.)
        |ACL-COMPAT.EXCL|::|END| |ACL-COMPAT.EXCL|::|SHORTEST|)
       "Note: if a regexp compiled with compile-regexp is passed, the\n
  options newlines-special and case-fold shouldn't be used, since\n
  the underlying engine uses them when generating the scanner,\n
  not when executing it."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|152 157 (DEFUN COMPILE-REGEXP (REGEXP) ...)-10|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|COMPILE-REGEXP| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|COMPILE-REGEXP|
       #17Y(00 00 00 00 01 00 00 00 26 02 AD 6F 00 2F 01 19 02)
       (|ACL-COMPAT.EXCL|::|FROB-REGEXP| |CL-PPCRE|::|CREATE-SCANNER|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|ACL-COMPAT.EXCL|::|REGEXP|)
       "Note: Take care when using scanners compiled with this option\n
  to not depend on options case-fold and newlines-special in match-regexp."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|159 159 (DEFVAR *CURRENT-CASE-MODE* :CASE-INSENSITIVE-UPPER)-11|
   #24Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB 8C 57 04 DB DC 31 5A C6 19
        01)
   ((|COMMON-LISP|::|SPECIAL| |ACL-COMPAT.EXCL|::|*CURRENT-CASE-MODE*|)
    |ACL-COMPAT.EXCL|::|*CURRENT-CASE-MODE*| :|CASE-INSENSITIVE-UPPER|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|161 162 (DEFUN INTERN* (S LEN PACKAGE) ...)-12|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|INTERN*| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|INTERN*|
       #20Y(00 00 00 00 03 00 00 00 26 04 AF DA B0 72 60 AE 31 E1 19 04) (0.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|ACL-COMPAT.EXCL|::|S| |ACL-COMPAT.EXCL|::|LEN|
        |COMMON-LISP|::|PACKAGE|)
       |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|164 179 (DEFMACRO ERRORSET (FORM &OPTIONAL # ...) ...)-13|
   #23Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC DD 72 4C 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|ERRORSET| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|ERRORSET|
       #50Y(00 00 00 00 02 00 00 00 26 03 AE DA DB 63 2D 04 02 1D 1A 9F 5C 78
            DE DF E0 E1 E2 E3 B2 7B 02 CF 5D 7A 7B 02 7B 02 7B 02 D0 5D 5D 19
            04 AE 2F 03 19 03)
       (2. 4. |SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|MACRO-CALL-ERROR|
        |COMMON-LISP|::|LET*| (|ACL-COMPAT.EXCL|::|OK| |COMMON-LISP|::|NIL|)
        |ACL-COMPAT.EXCL|::|RESULTS| |COMMON-LISP|::|IGNORE-ERRORS|
        |COMMON-LISP|::|PROG1| |COMMON-LISP|::|MULTIPLE-VALUE-LIST|
        ((|COMMON-LISP|::|SETQ| |ACL-COMPAT.EXCL|::|OK| |COMMON-LISP|::|T|))
        ((|COMMON-LISP|::|IF| |ACL-COMPAT.EXCL|::|OK|
          (|COMMON-LISP|::|APPLY| #'|COMMON-LISP|::|VALUES| |COMMON-LISP|::|T|
           |ACL-COMPAT.EXCL|::|RESULTS|)
          |COMMON-LISP|::|NIL|)))
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
       "This macro is incomplete.  It was hacked to get AllegroServe\n
running, but the announce and catch-breaks arguments are ignored.  See\n
documentation at\n
http://franz.com/support/documentation/6.1/doc/pages/operators/excl/errorset.htm\n
An implementation of the catch-breaks argument will necessarily be\n
implementation-dependent, since Ansi does not allow any\n
program-controlled interception of a break."
       1)
    (|ACL-COMPAT.EXCL|::|FORM| |COMMON-LISP|::|&OPTIONAL|
     (|ACL-COMPAT.EXCL|::|ANNOUNCE| |COMMON-LISP|::|NIL|)
     (|ACL-COMPAT.EXCL|::|CATCH-BREAKS| |COMMON-LISP|::|NIL|)))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|181 183 (DEFMACRO FAST (&BODY FORMS) ...)-14|
   #23Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC DD 72 4C 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|FAST| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|FAST|
       #19Y(00 00 00 00 02 00 00 00 26 03 95 02 DA DB 9F 5D 5D 19 04)
       (|COMMON-LISP|::|LOCALLY|
        (|COMMON-LISP|::|DECLARE|
         (|COMMON-LISP|::|OPTIMIZE| (|COMMON-LISP|::|SPEED| 3.)
          (|COMMON-LISP|::|SAFETY| 0.) (|COMMON-LISP|::|DEBUG| 0.))))
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|) |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|&BODY| |ACL-COMPAT.EXCL|::|FORMS|))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|185 189 (DEFUN WRITE-VECTOR (SEQUENCE STREAM &KEY ...) ...)-15|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|WRITE-VECTOR| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|WRITE-VECTOR|
       #99Y(00 00 00 00 02 00 00 00 A6 1D 03 00 00 00 00 2B 01 7F 06 00 00 3D
            04 3B 03 12 7D 03 1B 0E DF AD AF 6D 06 01 DE 63 E1 2D 06 08 16 01
            68 00 00 AC 8E 19 21 AC 8F 31 0D AC 71 06 DD 8F 14 06 AC 71 07 24
            04 10 AC 8F 31 56 AC 71 06 02 23 50 AC 71 07 25 04 4A 16 01 68 00
            00 B2 DA B3 DB B4 2D 06 09 19 07)
       (:|START| :|END| :|ENDIAN-SWAP| (|COMMON-LISP|::|UNSIGNED-BYTE| 8.) 1.
        |COMMON-LISP|::|SEQUENCE|
        #Y(|ACL-COMPAT.EXCL|::|WRITE-VECTOR-1|
           #16Y(00 00 00 00 01 00 00 00 20 02 9E 0C 00 01 19 02)
           (|COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|OR| |COMMON-LISP|::|STRING|
         (|COMMON-LISP|::|ARRAY| (|COMMON-LISP|::|UNSIGNED-BYTE| 8.) 1.)
         (|COMMON-LISP|::|ARRAY| (|COMMON-LISP|::|SIGNED-BYTE| 8.) 1.))
        |SYSTEM|::|CHECK-TYPE-FAILED| |COMMON-LISP|::|WRITE-SEQUENCE|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&KEY|
        |ACL-COMPAT.EXCL|::|START| |ACL-COMPAT.EXCL|::|END|
        |ACL-COMPAT.EXCL|::|ENDIAN-SWAP|)
       |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|191 220 (DEFUN STRING-TO-OCTETS (STRING &KEY # ...) ...)-16|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|ACL-COMPAT.EXCL|::|STRING-TO-OCTETS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|ACL-COMPAT.EXCL|::|STRING-TO-OCTETS|
       #156Y(00 00 00 00 01 00 00 00 A6 1C 06 00 00 00 3B 06 02 7E 06 3B 05 02
             CB FD 3D 04 3D 03 3B 02 20 7D 02 92 04 1E B3 81 62 04 93 06 1A B0
             B2 73 01 38 32 B1 1B 16 A1 1B 30 E2 B1 72 62 AE 33 02 1E 93 04 62
             92 06 66 B0 B2 33 01 38 14 93 04 08 14 72 62 AD 90 01 34 5E 93 04
             03 93 03 5B AC 7B 01 38 07 CC FD CB FC 31 1D 14 B3 63 CB F8 1B 13
             B7 AE 73 01 01 71 28 AF AE AE 33 01 02 16 01 85 01 85 00 AD B5 91
             01 34 67 16 02 93 08 0A 97 01 AD AD E0 33 01 02 16 01 AC AE 40 02
             19 0A)
       (:|NULL-TERMINATE| :|START| :|END| :|MB-VECTOR| :|MAKE-MB-VECTOR?|
        :|EXTERNAL-FORMAT| 0. (|COMMON-LISP|::|UNSIGNED-BYTE| 8.)
        "Was given a vector of length ~A, ~\n
                                 but needed at least length ~A.")
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|STRING| |COMMON-LISP|::|&KEY|
        (|ACL-COMPAT.EXCL|::|NULL-TERMINATE| |COMMON-LISP|::|T|)
        (|ACL-COMPAT.EXCL|::|START| 0.) |ACL-COMPAT.EXCL|::|END|
        |ACL-COMPAT.EXCL|::|MB-VECTOR| |ACL-COMPAT.EXCL|::|MAKE-MB-VECTOR?|
        (|ACL-COMPAT.EXCL|::|EXTERNAL-FORMAT| :|DEFAULT|))
       "This function returns a lisp-usb8-vector and the number of bytes copied."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
